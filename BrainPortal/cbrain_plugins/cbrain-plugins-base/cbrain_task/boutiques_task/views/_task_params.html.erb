
<%-
#
# CBRAIN Project
#
# Copyright (C) 2008-2021
# The Royal Institution for the Advancement of Learning
# McGill University
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
-%>

<% content_for :head do %>
  <%= stylesheet_link_tag 'boutiques', :media => "all" %>
<% end %>

<%
  @descriptor = @task.descriptor_for_form
  inputs      = @descriptor.inputs          || []
  required    = @descriptor.required_inputs || []
  optional    = @descriptor.optional_inputs || []
  groups      = @descriptor.groups          || []
  params_in_groups = groups.map(&:members).flatten.uniq # list of param IDs
  interface_files  = Userfile.where(:id => @task.params[:interface_userfile_ids])
%>

<div class="task-params">
  <%- if inputs.empty? -%>
    <%= @task.name %> has no parameters.
  <%- else -%>
  <ul>
    <%# Write info for ungrouped parameters %>
    <% (required + optional).each do |input| %>
       <% next if params_in_groups.include? input.id %>
       <%= render :partial => task_partial(:boutiques_input), :locals =>
           { :input           => input,
             :isGroupMember   => false,
             :interface_files => interface_files,
           }
       %>
    <% end %>
    <%# Write info for grouped parameters %>
    <%- groups.each do |group| %>
       <%= render :partial => task_partial(:boutiques_group), :locals =>
           { :group           => group,
             :interface_files => interface_files,
           }
       %>
    <% end %>
  </ul>
  <%- end -%>
</div>

<%= render :partial => task_partial(:boutiques_preview) %>

<%=
## Debug code: to capture the JS code of 'form_js' in a file in /tmp
#  cap = capture do
#    render :partial => task_partial(:form_js), :locals => { :interface_files => interface_files }
#  end
#  File.open("/tmp/x.html.erb","w") { |fh| fh.write cap }
#  cap.html_safe
%>

<%= render :partial => task_partial(:form_js), :locals => { :interface_files => interface_files } %>

