{
  "swagger" : "2.0",
  "consumes" : [ "application/json", "application/x-www-form-urlencoded", "multipart/form-data" ],
  "info" : {
    "title" : "CBRAIN API",
    "description" : "API for interacting with the CBRAIN Platform",
    "version" : "5.1.0",
    "license" : {
      "name" : "GNU Public License, Version 3",
      "url" : "https://opensource.org/licenses/GPL-3.0"
    },
    "contact" : {
      "name" : "CBRAIN Development Team",
      "url" : "https://github.com/aces/cbrain"
    }
  },
  "host" : "portal.cbrain.mcgill.ca",
  "securityDefinitions" : {
    "BrainPortalSession" : {
      "type" : "apiKey",
      "name" : "cbrain_api_token",
      "in" : "query"
    }
  },
  "security" : [ {
    "BrainPortalSession" : [ ]
  } ],
  "schemes" : [ "https" ],
  "basePath" : "/",
  "produces" : [ "application/json", "application/xml" ],
  "paths" : {
    "/session" : {
      "post" : {
        "summary" : "Create a new session",
        "description" : "This is the main entry point to create a CBRAIN session. Note that if\na user is currently logged in, a new session will not be created,\nand the current session will be re-used.\n",
        "security" : [ ],
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "parameters" : [ {
          "name" : "login",
          "in" : "formData",
          "description" : "The username of the user trying to connect.",
          "type" : "string",
          "required" : true
        }, {
          "name" : "password",
          "in" : "formData",
          "description" : "The password of the user",
          "type" : "string",
          "format" : "password",
          "required" : true
        } ],
        "tags" : [ "Sessions" ],
        "responses" : {
          "200" : {
            "description" : "An object with the API token and the CBRAIN user ID",
            "schema" : {
              "$ref" : "#/definitions/SessionInfo"
            }
          },
          "401" : {
            "description" : "Password authentication failed."
          }
        }
      },
      "get" : {
        "summary" : "Get session information",
        "description" : "This returns information about the current session.\n",
        "tags" : [ "Sessions" ],
        "responses" : {
          "200" : {
            "description" : "An object with the API token and the CBRAIN user ID",
            "schema" : {
              "$ref" : "#/definitions/SessionInfo"
            }
          },
          "401" : {
            "description" : "No session created yet."
          }
        }
      },
      "delete" : {
        "summary" : "Destroy the current session",
        "description" : "This destroys the current session, effectively terminating the\naccess to the service.\n",
        "tags" : [ "Sessions" ],
        "responses" : {
          "200" : {
            "description" : "Session terminated"
          },
          "401" : {
            "description" : "No session created yet."
          }
        }
      }
    },
    "/users" : {
      "get" : {
        "summary" : "Returns all of the users in CBRAIN. Only available to admins.",
        "description" : "Returns all of the users registered in CBRAIN, as well as information on their permissions and group/site memberships.",
        "produces" : [ "application/json", "application/xml" ],
        "responses" : {
          "200" : {
            "description" : "A list of all the users in CBRAIN.",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/User"
              }
            }
          },
          "401" : {
            "description" : "No session created yet."
          }
        },
        "tags" : [ "Users" ]
      },
      "post" : {
        "summary" : "Create a new user in CBRAIN. Only available to admins.",
        "description" : "Creates a new user in CBRAIN. Only admins can create new users.\n",
        "tags" : [ "Users" ],
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [ {
          "name" : "user_mod_req",
          "in" : "body",
          "description" : "An object representing a request for a new User",
          "schema" : {
            "$ref" : "#/definitions/UserModReq"
          },
          "required" : true
        } ],
        "responses" : {
          "200" : {
            "description" : "User created successfully",
            "schema" : {
              "$ref" : "#/definitions/User"
            }
          },
          "422" : {
            "description" : "Attributes are invalid, or user already exists",
            "schema" : {
              "type" : "object"
            }
          }
        }
      }
    },
    "/users/{id}" : {
      "get" : {
        "summary" : "Returns information about a user",
        "description" : "Returns the information about the user associated with the ID given in\nargument. A normal user only has access to her own information, while an\nadministrator or site manager can have access to a larger set of users.\n",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the user",
          "required" : true,
          "type" : "integer"
        } ],
        "tags" : [ "Users" ],
        "responses" : {
          "200" : {
            "description" : "An object with the CBRAIN user information",
            "schema" : {
              "$ref" : "#/definitions/User"
            }
          },
          "404" : {
            "description" : "User not found with the specified ID"
          }
        }
      },
      "patch" : {
        "summary" : "Update information about a user",
        "description" : "Updates the information about a user\n",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of user to update",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "user_mod_req",
          "in" : "body",
          "description" : "An object representing a request for a new User",
          "schema" : {
            "$ref" : "#/definitions/UserModReq"
          },
          "required" : true
        } ],
        "tags" : [ "Users" ],
        "responses" : {
          "200" : {
            "description" : "An object with the CBRAIN user information",
            "schema" : {
              "$ref" : "#/definitions/User"
            }
          },
          "400" : {
            "description" : "User does not exist",
            "schema" : {
              "type" : "object"
            }
          },
          "422" : {
            "description" : "Attributes are invalid",
            "schema" : {
              "type" : "object"
            }
          }
        }
      },
      "delete" : {
        "summary" : "Deletes a CBRAIN user",
        "description" : "Deletes a CBRAIN User from the database\n",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of user to update",
          "required" : true,
          "type" : "integer"
        } ],
        "tags" : [ "Users" ],
        "responses" : {
          "200" : {
            "description" : "User successfully deleted"
          },
          "401" : {
            "description" : "Not authorized to delete this user."
          },
          "404" : {
            "description" : "User not found with the specified ID"
          },
          "409" : {
            "description" : "User cannot be deleted, as it has resources allocated to them."
          }
        }
      }
    },
    "/tool_configs" : {
      "get" : {
        "summary" : "Get a list of tool versions installed.",
        "description" : "This method returns a list of tool config objects.\n",
        "tags" : [ "ToolConfigs" ],
        "responses" : {
          "200" : {
            "description" : "An array of ToolConfig objects describing for each tool\nand execution server the available version numbers and the\ninformation about their local configuration.\n",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ToolConfig"
              }
            }
          },
          "401" : {
            "description" : "No session created yet."
          }
        }
      }
    },
    "/tool_configs/{id}" : {
      "get" : {
        "summary" : "Get information about a particular tool configuration",
        "description" : "Returns the information about how a particular configuration of a\ntool on an execution server.\n",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "the ID of the configuration",
          "required" : true,
          "type" : "integer"
        } ],
        "tags" : [ "ToolConfigs" ],
        "responses" : {
          "200" : {
            "description" : "A single ToolConfig object describing the configuration.\n",
            "schema" : {
              "$ref" : "#/definitions/ToolConfig"
            }
          }
        }
      }
    },
    "/tags" : {
      "get" : {
        "summary" : "Get a list of the tags currently in CBRAIN.",
        "description" : "This method returns a list of tag objects.\n",
        "tags" : [ "Tags" ],
        "responses" : {
          "200" : {
            "description" : "An array of Tag objects that are used to group Tasks or Userfiles.\n",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Tag"
              }
            }
          },
          "401" : {
            "description" : "No session created yet."
          }
        }
      },
      "post" : {
        "summary" : "Create a new tag.",
        "description" : "Create a new tag in CBRAIN.\n",
        "parameters" : [ {
          "name" : "tag_mod_req",
          "in" : "body",
          "schema" : {
            "$ref" : "#/definitions/TagModReq"
          },
          "required" : true
        } ],
        "tags" : [ "Tags" ],
        "responses" : {
          "201" : {
            "description" : "Returns the created Tag object.\n",
            "schema" : {
              "$ref" : "#/definitions/Tag"
            }
          },
          "401" : {
            "description" : "No session created yet.\n"
          }
        }
      }
    },
    "/tags/{id}" : {
      "get" : {
        "summary" : "Get one tag.",
        "description" : "Returns a single tag with the ID specified.\n",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the tag to get.",
          "required" : true,
          "type" : "integer"
        } ],
        "tags" : [ "Tags" ],
        "responses" : {
          "200" : {
            "description" : "Returns the Tag object.\n",
            "schema" : {
              "$ref" : "#/definitions/Tag"
            }
          },
          "401" : {
            "description" : "No session created yet.\n"
          }
        }
      },
      "put" : {
        "summary" : "Update a tag.",
        "description" : "Update the tag specified by the ID parameter.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the tag to update.",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "tag_mod_req",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/TagModReq"
          }
        } ],
        "tags" : [ "Tags" ],
        "responses" : {
          "200" : {
            "description" : "Tag was updated successfully."
          },
          "401" : {
            "description" : "No session created yet."
          },
          "422" : {
            "description" : "Could not update Tag."
          }
        }
      },
      "delete" : {
        "summary" : "Delete a tag.",
        "description" : "Delete the tag specified by the ID parameter.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the tag to delete.",
          "required" : true,
          "type" : "integer"
        } ],
        "tags" : [ "Tags" ],
        "responses" : {
          "200" : {
            "description" : "Tag was deleted."
          },
          "401" : {
            "description" : "No session created yet."
          },
          "422" : {
            "description" : "Tag could not be deleted."
          }
        }
      }
    },
    "/bourreaux" : {
      "get" : {
        "summary" : "Get a list of the Bourreaux available to be used by the current user.",
        "description" : "This method returns a list of Bourreau objects.\n",
        "tags" : [ "Bourreaux" ],
        "responses" : {
          "200" : {
            "description" : "An array of Bourreau objects describing an execution\nserver available to be used by the current user.\n",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Bourreau"
              }
            }
          },
          "401" : {
            "description" : "No session created yet."
          }
        }
      }
    },
    "/bourreaux/{id}" : {
      "get" : {
        "summary" : "Get information about a Bourreau.",
        "description" : "This method returns a single Bourreau object based on the\nID parameter.\n",
        "tags" : [ "Bourreaux" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the Bourreau to get information on.",
          "required" : true,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "A Bourreau object with information about the status\nof the execution server.\n",
            "schema" : {
              "$ref" : "#/definitions/Bourreau"
            }
          },
          "401" : {
            "description" : "No session created yet."
          }
        }
      }
    },
    "/data_providers" : {
      "get" : {
        "summary" : "Get a list of the Data Providers available to the current user.",
        "description" : "This method returns a list of Data Provider objects that represent\nservers with disk space accessible for storing Userfiles.\n",
        "tags" : [ "DataProviders" ],
        "responses" : {
          "200" : {
            "description" : "An array of Data Provider objects describing servers that store data.\n",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/DataProvider"
              }
            }
          },
          "401" : {
            "description" : "No session created yet."
          }
        }
      }
    },
    "/data_providers/{id}" : {
      "get" : {
        "summary" : "Get information on a particular Data Provider.",
        "description" : "This method returns a single Data Provider specified by the ID parameter\n",
        "tags" : [ "DataProviders" ],
        "parameters" : [ {
          "name" : "id",
          "type" : "integer",
          "description" : "ID of the Data Provider to get information on.",
          "required" : true,
          "in" : "path"
        } ],
        "responses" : {
          "200" : {
            "description" : "A Data Provider object.\n",
            "schema" : {
              "$ref" : "#/definitions/DataProvider"
            }
          },
          "401" : {
            "description" : "No session created yet."
          }
        }
      }
    },
    "/data_providers/{id}/browse" : {
      "get" : {
        "summary" : "List the files on a Data Provider.",
        "description" : "This method allows the inspection of what files are present on a Data Provider specified by the ID parameter. Files that are not yet registered as Userfiles are visible using this method, as well as regularly accessible Userfiles.\n",
        "tags" : [ "DataProviders" ],
        "parameters" : [ {
          "name" : "id",
          "type" : "integer",
          "description" : "The ID of the Data Provider to browse.",
          "required" : true,
          "in" : "path"
        } ],
        "responses" : {
          "200" : {
            "description" : "A list of files present in the Data Provider, with their associated\nregistration status, FileType, and other information.\n",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/FileInfo"
              }
            }
          },
          "401" : {
            "description" : "No session created yet."
          },
          "403" : {
            "description" : "Data Provider is not browsable."
          }
        }
      }
    },
    "/data_providers/{id}/register" : {
      "post" : {
        "summary" : "Registers a file as a Userfile in CBRAIN.",
        "description" : "This method allows new files to be added to CBRAIN. The files must first\nbe transfered to the Data Provider via SFTP. For more information on\nSFTP file transfers, consult the CBRAIN Wiki documentation. Once files\nare present on the Data Provider, this method registers them in CBRAIN\nby specifying the file type. You can also specify to copy/move the files\nto another Data Provider after file registration.\n",
        "tags" : [ "DataProviders" ],
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "description" : "The ID of the Data Provider to register files on.",
          "type" : "integer"
        }, {
          "name" : "multi_registration_mod_req",
          "in" : "body",
          "description" : "Arrays containing the filenames and types to register.",
          "schema" : {
            "$ref" : "#/definitions/MultiRegistrationModReq"
          },
          "required" : true
        } ],
        "responses" : {
          "200" : {
            "description" : "Files were successfully registered.",
            "schema" : {
              "$ref" : "#/definitions/RegistrationInfo"
            }
          },
          "401" : {
            "description" : "No session created yet."
          },
          "403" : {
            "description" : "The current user does not have access to register files."
          }
        }
      }
    },
    "/data_providers/{id}/unregister" : {
      "post" : {
        "summary" : "Unregisters files as Userfile in CBRAIN.",
        "description" : "This method allows files to be unregistered from CBRAIN. This will not\ndelete the files, but removes them from the CBRAIN database, so Tools\nmay no longer be run on them.\n",
        "tags" : [ "DataProviders" ],
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the Data Provider to unregister files from.",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "multi_registration_mod_req",
          "in" : "body",
          "description" : "Arrays containing the filenames to unregister.",
          "schema" : {
            "$ref" : "#/definitions/MultiRegistrationModReq"
          },
          "required" : true
        } ],
        "responses" : {
          "200" : {
            "description" : "Files were successfully unregistered.\n",
            "schema" : {
              "$ref" : "#/definitions/RegistrationInfo"
            }
          },
          "401" : {
            "description" : "No session created yet."
          },
          "403" : {
            "description" : "The current user does not have access to unregister files."
          }
        }
      }
    },
    "/data_providers/{id}/delete" : {
      "post" : {
        "summary" : "Deletes unregistered files from a CBRAIN Data provider.",
        "description" : "This method allows files that have not been registered from CBRAIN to be\ndeleted. This may be necessary if files were uploaded in error, or if\nthey were unregistered but not immediately deleted.\n",
        "tags" : [ "DataProviders" ],
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the Data Provider to delete files from.",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "multi_registration_mod_req",
          "in" : "body",
          "description" : "Arrays containing the files to delete.",
          "schema" : {
            "$ref" : "#/definitions/MultiRegistrationModReq"
          },
          "required" : true
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully launched the operation in the background to delete files.",
            "schema" : {
              "$ref" : "#/definitions/RegistrationInfo"
            }
          },
          "401" : {
            "description" : "No session created yet."
          },
          "403" : {
            "description" : "You cannot delete files from this provider."
          }
        }
      }
    },
    "/data_providers/{id}/is_alive" : {
      "get" : {
        "summary" : "Pings a Data Provider to check if it is running.",
        "description" : "This method allows the querying of a Data Provider specified by the ID\nparameter to see if it is running or not.\n",
        "tags" : [ "DataProviders" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "type" : "integer",
          "format" : "int64",
          "description" : "The ID of the Data Provider to query.",
          "required" : true
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns \"true\" or \"false\".",
            "schema" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "/groups" : {
      "get" : {
        "summary" : "Get a list of the Groups (projects) available to the current user.",
        "description" : "This method returns a list of all of the groups that the current user has access to.\n",
        "tags" : [ "Groups" ],
        "responses" : {
          "200" : {
            "description" : "A list of Group objects.\n",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Group"
              }
            }
          },
          "401" : {
            "description" : "No session created yet."
          }
        }
      },
      "post" : {
        "summary" : "Creates a new Group.",
        "description" : "This method creates a new Group, which allows users to organize their files and tasks.\n",
        "tags" : [ "Groups" ],
        "parameters" : [ {
          "name" : "group_mod_req",
          "in" : "body",
          "description" : "An object describing the group to create",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/GroupModReq"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Successfully created Group.",
            "schema" : {
              "$ref" : "#/definitions/Group"
            }
          },
          "401" : {
            "description" : "No session created yet."
          }
        }
      }
    },
    "/groups/{id}" : {
      "get" : {
        "summary" : "Get information on a Group (project).",
        "description" : "This method returns information on a single Group (project), specified\nby the ID parameter. Information returned includes the list of Users\nwho are members of the group, the ID of the Site the Group is part of,\nand whether or not the group is visible to Regular Users.\n",
        "tags" : [ "Groups" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the Group to get information on.",
          "required" : true,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully retrieved information on the Group.\n",
            "schema" : {
              "$ref" : "#/definitions/Group"
            }
          },
          "401" : {
            "description" : "No Session created yet."
          }
        }
      },
      "put" : {
        "summary" : "Update the properties of a Group (project).",
        "description" : "This method allows the properties of a Group (project) to be updated.\nThis includes the User membership, the ID of the site the Group belongs\nto, and the visibility status of the group to Regular Users.\n",
        "tags" : [ "Groups" ],
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the Group",
          "required" : true,
          "type" : "integer"
        }, {
          "name" : "group_mod_req",
          "in" : "body",
          "description" : "An object with the group information to update",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/GroupModReq"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Group updated successfully."
          },
          "401" : {
            "description" : "No session created yet."
          },
          "403" : {
            "description" : "Current user is forbidden from editing this group."
          }
        }
      },
      "delete" : {
        "summary" : "Deletes a Group (project).",
        "description" : "This method allows the removal of Groups (projects) that are no longer\nnecessary. Groups that have Userfiles associated with them may not be\ndeleted.\n",
        "tags" : [ "Groups" ],
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the Group to delete.",
          "required" : true,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully deleted the Group (project)."
          },
          "401" : {
            "description" : "No Session created yet."
          }
        }
      }
    },
    "/userfiles" : {
      "get" : {
        "summary" : "List of the Userfiles accessible to the current user.",
        "description" : "This method returns a list of Userfiles that are available to the current User.\n",
        "tags" : [ "Userfiles" ],
        "responses" : {
          "200" : {
            "description" : "List of accessible Userfiles.",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Userfile"
              }
            }
          },
          "401" : {
            "description" : "No Session created yet."
          }
        }
      },
      "post" : {
        "summary" : "Creates a new Userfile and upload its content.",
        "description" : "This method creates a new Userfile in CBRAIN, with the current user\nas the owner of the file.\n",
        "tags" : [ "Userfiles" ],
        "consumes" : [ "multipart/form-data" ],
        "parameters" : [ {
          "name" : "upload_file",
          "in" : "formData",
          "description" : "File content to upload to CBRAIN",
          "type" : "file",
          "required" : true
        }, {
          "name" : "data_provider_id",
          "in" : "formData",
          "description" : "The ID of the Data Provider to upload the file to.",
          "type" : "integer",
          "required" : true
        }, {
          "name" : "userfile[group_id]",
          "in" : "formData",
          "type" : "integer",
          "description" : "ID of the group that will have access to the Userfile",
          "required" : true
        }, {
          "name" : "file_type",
          "in" : "formData",
          "description" : "The type of the file",
          "type" : "string",
          "default" : "SingleFile",
          "required" : true
        }, {
          "name" : "_do_extract",
          "in" : "formData",
          "description" : "set to the string 'on' to indicate that the uploaded content is a tar.gz or .zip archive that need to be extracted. See also the parameter _up_ex_mode",
          "type" : "string"
        }, {
          "name" : "_up_ex_mode",
          "in" : "formData",
          "description" : "if '_do_extract' is set to 'on', set this to 'collection' to create a single collection, or 'multiple' to create one file per entry in the uploaded content",
          "type" : "string"
        } ],
        "responses" : {
          "201" : {
            "description" : "Userfile successfully created.",
            "schema" : {
              "type" : "object"
            }
          },
          "401" : {
            "description" : "No Session created yet."
          }
        }
      }
    },
    "/userfiles/{id}" : {
      "get" : {
        "summary" : "Get information on a Userfile.",
        "description" : "This method returns information about a single Userfile, specified by\nits ID. Information returned includes the ID of the owner, the Group\n(project) it is a part of, a description, information about where the\nacutal copy of the file currently is, and what the status is of any\nsynhronization operations that may have been requested.\n",
        "tags" : [ "Userfiles" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID number of the Userfile to get information on.",
          "type" : "integer",
          "required" : true
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the information about the Userfile.",
            "schema" : {
              "$ref" : "#/definitions/Userfile"
            }
          }
        }
      },
      "put" : {
        "summary" : "Update information on a Userfile.",
        "description" : "This method allows a User to update information on a userfile.\n",
        "tags" : [ "Userfiles" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID number of the Userfile to update.",
          "type" : "integer",
          "format" : "int64",
          "required" : true
        }, {
          "name" : "userfile_mod_req",
          "in" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/UserfileModReq"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Userfile updated successfully."
          },
          "401" : {
            "description" : "No session created yet."
          }
        }
      }
    },
    "/userfiles/{id}/content" : {
      "get" : {
        "summary" : "Get the content of a Userfile",
        "description" : "This method allows you to download the content of a userfile.",
        "tags" : [ "Userfiles" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID number of the Userfile to download",
          "type" : "integer",
          "required" : true
        } ],
        "responses" : {
          "200" : {
            "description" : "The contents of the file",
            "schema" : {
              "type" : "string"
            }
          },
          "403" : {
            "description" : "Forbidden"
          }
        }
      }
    },
    "/userfiles/download" : {
      "post" : {
        "summary" : "Download several files",
        "description" : "This method compresses several Userfiles in .gz format and prepares them to be downloaded.",
        "tags" : [ "Userfiles" ],
        "parameters" : [ {
          "name" : "multi_userfile_mod_req",
          "in" : "body",
          "required" : true,
          "description" : "The IDs of the files to be downloaded. If more than one file is specified, they will be zipped into a gzip archive.",
          "schema" : {
            "$ref" : "#/definitions/MultiUserfilesModReq"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Indicates that the files are being compressed and downloaded."
          }
        }
      }
    },
    "/userfiles/delete_files" : {
      "delete" : {
        "summary" : "Delete several files that have been registered as Userfiles",
        "tags" : [ "Userfiles" ],
        "parameters" : [ {
          "name" : "multi_userfile_mod_req",
          "in" : "body",
          "required" : true,
          "description" : "The IDs of the files to destroy.",
          "schema" : {
            "$ref" : "#/definitions/MultiUserfilesModReq"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Indicates that the files are being deleted."
          }
        }
      }
    },
    "/userfiles/change_provider" : {
      "post" : {
        "summary" : "Moves the Userfiles from their current Data Provider to a new one.",
        "tags" : [ "Userfiles" ],
        "parameters" : [ {
          "name" : "multi_userfile_mod_req",
          "in" : "body",
          "required" : true,
          "description" : "The IDs of the files to move.",
          "schema" : {
            "$ref" : "#/definitions/MultiUserfilesModReq"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Indicates that the files are being moved or copied in the background."
          }
        }
      }
    },
    "/userfiles/compress" : {
      "post" : {
        "summary" : "Compresses many Userfiles each into their own GZIP archive.",
        "tags" : [ "Userfiles" ],
        "parameters" : [ {
          "name" : "multi_userfile_mod_req",
          "in" : "body",
          "required" : true,
          "description" : "The IDs of the files to compress.",
          "schema" : {
            "$ref" : "#/definitions/MultiUserfilesModReq"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Indicates that the compression is starting in the background."
          }
        }
      }
    },
    "/userfiles/uncompress" : {
      "post" : {
        "summary" : "Uncompresses many Userfiles.",
        "tags" : [ "Userfiles" ],
        "parameters" : [ {
          "name" : "multi_userfile_mod_req",
          "in" : "body",
          "required" : true,
          "description" : "The IDs of the files to uncompress.",
          "schema" : {
            "$ref" : "#/definitions/MultiUserfilesModReq"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Indicates that files are being uncompressed in the background."
          }
        }
      }
    },
    "/userfiles/sync_multiple" : {
      "post" : {
        "summary" : "Syncs Userfiles to the local Data Providers cache.",
        "description" : "Synchronizing files to their the local cache allows you to download, visualize and do processing on them that is not available if not synced. CBRAIN operations will sync files automatically, and this is only necessary if a file is changed on its host Data Provdier by an external process.",
        "tags" : [ "Userfiles" ],
        "parameters" : [ {
          "name" : "multi_userfile_mod_req",
          "in" : "body",
          "required" : true,
          "description" : "The IDs of the files to synchronize.",
          "schema" : {
            "$ref" : "#/definitions/MultiUserfilesModReq"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Indicates that synchronization is starting in the background"
          }
        }
      }
    },
    "/tasks" : {
      "get" : {
        "summary" : "Get the list of Tasks.",
        "description" : "This method returns the list of Tasks accessible to the current user.\n",
        "tags" : [ "Tasks" ],
        "responses" : {
          "200" : {
            "description" : "List of all accessible Tasks.",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/CbrainTask"
              }
            }
          },
          "401" : {
            "description" : "No Session created yet."
          }
        }
      },
      "post" : {
        "summary" : "Create a new Task.",
        "description" : "This method allows the creation of a new Task.\n",
        "tags" : [ "Tasks" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "cbrain_task",
          "description" : "The task to create.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CbrainTaskModReq"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Task created successfully.",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/CbrainTask"
              }
            }
          },
          "401" : {
            "description" : "No Session created yet."
          }
        }
      }
    },
    "/tasks/{id}" : {
      "get" : {
        "summary" : "Get information on a Task.",
        "description" : "This method returns information on a Task, including its status,\nTask restartability and information on where the results are kept.\n",
        "tags" : [ "Tasks" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID number of the Task to delete.",
          "required" : true,
          "type" : "integer"
        } ],
        "responses" : {
          "200" : {
            "description" : "Information about a Task.",
            "schema" : {
              "$ref" : "#/definitions/CbrainTask"
            }
          },
          "401" : {
            "description" : "No Session created yet."
          }
        }
      }
    },
    "/tools" : {
      "get" : {
        "summary" : "Get the list of Tools.",
        "description" : "This method returns a list of all of the Tools that exist in CBRAIN.\nTools encapsulate a scientific program designed to extract information\nfrom an input Userfile.\n",
        "tags" : [ "Tools" ],
        "responses" : {
          "200" : {
            "description" : "List of Tools.",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Tool"
              }
            }
          },
          "401" : {
            "description" : "No Session created yet."
          }
        }
      }
    }
  },
  "definitions" : {
    "SessionInfo" : {
      "type" : "object",
      "properties" : {
        "user_id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "cbrain_api_token" : {
          "type" : "string"
        }
      }
    },
    "User" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique numerical ID for the user."
        },
        "login" : {
          "type" : "string",
          "description" : "UNIX-style username."
        },
        "password" : {
          "type" : "string",
          "format" : "password",
          "description" : "Password field"
        },
        "password_confirmation" : {
          "type" : "string",
          "format" : "password",
          "description" : "Password field (generally same as 'password')"
        },
        "full_name" : {
          "type" : "string",
          "description" : "Full name of the user."
        },
        "email" : {
          "type" : "string",
          "description" : "email address of the user."
        },
        "city" : {
          "type" : "string",
          "description" : "city where the user is located"
        },
        "country" : {
          "type" : "string",
          "description" : "country where the user is located"
        },
        "time_zone" : {
          "type" : "string",
          "description" : "time-zone (should make it this an enum)"
        },
        "type" : {
          "type" : "string",
          "default" : "NormalUser",
          "description" : "Classification of user permission level"
        },
        "site_id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "ID of the site affiliation for the user."
        },
        "last_connected_at" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "time of last connection by the user. (can be empty)"
        },
        "account_locked" : {
          "type" : "string",
          "enum": ["true", "false"],
          "description" : "Whether or not the account is locked."
        }
      }
    },
    "ToolConfig" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique numerical ID for the ToolConfig."
        },
        "version_name" : {
          "type" : "string",
          "description" : "the version name of the configuration"
        },
        "description" : {
          "type" : "string",
          "description" : "a description of the configuration"
        },
        "tool_id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "the ID of the tool associated with this configuration"
        },
        "bourreau_id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The ID of the execution server where this tool\nconfiguration is available.\n"
        },
        "group_id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "the ID of the project controlling access to this ToolConfig"
        },
        "ncpus" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "A hint at how many CPUs the CBRAIN task will allocate\nto run this tool configuration\n"
        }
      }
    },
    "Tag" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier for the tag"
        },
        "name" : {
          "type" : "string",
          "description" : "Name of the tag. This holds all the information about what the tag is supposed to indicate about your files.\n"
        },
        "user_id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The ID of the user that the tag belongs to.\n"
        },
        "group_id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The ID of the group that the tag belongs to.\n"
        }
      }
    },
    "Bourreau" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique numerical ID for the bourreau."
        },
        "name" : {
          "type" : "string",
          "description" : "Name given by the creator to the bourreau."
        },
        "user_id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "ID of the creator of the bourreau."
        },
        "group_id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "ID of the group allowed to use the bourreau."
        },
        "online" : {
          "type" : "string",
          "enum": ["true", "false"],
          "description" : "online"
        },
        "read_only" : {
          "type" : "string",
          "enum": ["true", "false"],
          "description" : "Specifies whether the bourreau is read-only or can be modified."
        },
        "description" : {
          "type" : "string",
          "description" : "Description of the bourreau."
        }
      }
    },
    "DataProvider" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique ID for the Data Provider."
        },
        "name" : {
          "type" : "string",
          "description" : "Name of the Data Provider."
        },
        "type" : {
          "type" : "string",
          "description" : "Type of Data Provider, which usually indicates whether it is a local Data Provider, has a flat internal directory structure, or is meant for file uploading to CBRAIN."
        },
        "user_id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Creator and owner of the Data Provider."
        },
        "group_id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "ID of the group that has access to this Data Provider."
        },
        "online" : {
          "type" : "string",
          "enum": ["true", "false"],
          "description" : "Boolean variable that indicates whether the system hosting the Data Provider is accessible."
        },
        "read_only" : {
          "type" : "string",
          "enum": ["true", "false"],
          "description" : "Boolean variable that indicates whether the Data Provider can be written to."
        },
        "description" : {
          "type" : "string",
          "description" : "Description of the Data Provider."
        },
        "is_browsable" : {
          "type" : "string",
          "enum": ["true", "false"]
        },
        "is_fast_syncing" : {
          "type" : "string",
          "enum": ["true", "false"]
        },
        "allow_file_owner_change" : {
          "type" : "string",
          "enum": ["true", "false"]
        },
        "content_storage_shared_between_users" : {
          "type" : "string",
          "enum": ["true", "false"]
        }
      }
    },
    "Group" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "ID number of the group."
        },
        "name" : {
          "type" : "string",
          "description" : "Name of the group."
        },
        "description" : {
          "type" : "string",
          "description" : "Description of the group."
        },
        "type" : {
          "type" : "string",
          "description" : "Type of group."
        },
        "site_id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "ID of the site associated with the group."
        },
        "creator_id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "ID of the User who created the group.\n"
        },
        "invisible" : {
          "type" : "boolean",
          "description" : "Specifies whether or not the group is visible to Normal Users.\nInvisible groups exist to specify levels of access to Userfiles,\nDataProviders and Bourreaux.\n"
        }
      }
    },
    "Userfile" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "ID number of the file."
        },
        "name" : {
          "type" : "string",
          "description" : "Name of the file that the Userfile represents"
        },
        "size" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Number of bytes used to store the file."
        },
        "user_id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "ID of the owner of the file."
        },
        "parent_id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "ID of the parent Userfile, if any exists, or null otherwise."
        },
        "type" : {
          "type" : "string",
          "description" : "Type of the file. This is important in determining what tools can be run on the file. The most generic file types, are the Single File, which represents one file, and the File Collection, which represents a directory full of files."
        },
        "group_id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "ID of the group that owns the file, which determines its visibility status."
        },
        "data_provider_id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "ID of the Data Provider that is hosting the persistent copy of the file. It may exist in caches across the systems that make up CBRAIN, as copies of the file are made in order to run scientific programs on them on remote systems."
        },
        "group_writable" : {
          "type" : "string",
          "enum": ["true", "false"],
          "description" : "Boolean variable that specifies whether members of the owner group have access to modify or overwrite the file."
        },
        "num_files" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Number of files that the Userfiles represents. For Single Files, this is always 1."
        },
        "hidden" : {
          "type" : "string",
          "enum": ["true", "false"],
          "description" : "Boolean variable that specifies whether this file is hidden or not in the user interface."
        },
        "immutable" : {
          "type" : "string",
          "enum": ["true", "false"],
          "description" : "Boolean variable that specifies whether any user can modify the contents of the file."
        },
        "archived" : {
          "type" : "string",
          "enum": ["true", "false"],
          "description" : "Boolean variable that specifies whether the file is available, uncompressed, or has been archived."
        },
        "description" : {
          "type" : "string",
          "description" : "Description of the file."
        }
      }
    },
    "CbrainTask" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier for the Task."
        },
        "type" : {
          "type" : "string",
          "description" : "The task type"
        },
        "user_id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "ID of the User who created the Task."
        },
        "group_id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "ID of the group that this task is being run in."
        },
        "bourreau_id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "ID of the Bourreau the Task was launched on."
        },
        "tool_config_id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "ID number that specifies which Tool Config to use. The Tool Config specifies environment variables and other system-specific scripts necessary for the Task to be run in the target environment."
        },
        "batch_id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "ID of the batch this task was launched as part of. Batches of tasks consist of the same task, with the same parameters, being run on many different input files."
        },
        "params" : {
          "type" : "object",
          "description" : "Parameters used as inputs to the scientific calculation associated with the task."
        },
        "status" : {
          "type" : "string",
          "description" : "Current status of the task."
        },
        "created_at" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date created."
        },
        "updated_at" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Last updated."
        },
        "run_number" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The number of times that this task was run."
        },
        "results_data_provider_id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "ID of the Data Provider that contains the Userfile that represents the results of the task."
        },
        "cluster_workdir_size" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "size of workdirectory"
        },
        "workdir_archived" : {
          "type" : "string",
          "enum": ["true", "false"],
          "description" : "Boolean variable that indicates whether the working directory of the task is available on the processing server or has been archived and is no longer accessible."
        },
        "workdir_archive_userfile_id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "ID of the userfile created as part of the archival process, if the working directory of the task has been archived."
        },
        "description" : {
          "type" : "string",
          "description" : "Description of the Task."
        }
      }
    },
    "Tool" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique identifier for the Tool."
        },
        "name" : {
          "type" : "string",
          "description" : "Name of the Tool."
        },
        "user_id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Creator of the Tool."
        },
        "group_id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Group that has access to the Tool."
        },
        "category" : {
          "type" : "string",
          "description" : "Category of the Tool"
        },
        "cbrain_task_class_name" : {
          "type" : "string",
          "description" : "The name of the Task class that will be created when jobs are launched using the Tool."
        },
        "select_menu_text" : {
          "type" : "string",
          "description" : "Text that appears for Tool selection."
        },
        "description" : {
          "type" : "string",
          "description" : "Description of the Tool."
        },
        "url" : {
          "type" : "string",
          "description" : "URL of the website that describes the Tool and possibly has code for the Tool."
        }
      }
    },
    "RegistrationInfo" : {
      "type" : "object",
      "properties" : {
        "notice" : {
          "type" : "string"
        },
        "error" : {
          "type" : "string"
        },
        "newly_registered_userfiles" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Userfile"
          }
        },
        "previously_registered_userfiles" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Userfile"
          }
        },
        "userfiles_in_transit" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Userfile"
          }
        },
        "num_unregistered" : {
          "type" : "integer",
          "format" : "int64"
        },
        "num_erased" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "FileInfo" : {
      "type" : "object",
      "properties" : {
        "userfile_id" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "id of the userfile"
        },
        "name" : {
          "type" : "string",
          "description" : "the base filename"
        },
        "group" : {
          "type" : "string",
          "description" : "string representation of gid, the name of the group"
        },
        "gid" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "numeric group id of the file"
        },
        "owner" : {
          "type" : "string",
          "description" : "string representation of uid, the name of the owner"
        },
        "uid" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "numeric uid of owner"
        },
        "permissions" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "an int interpreted in octal, e.g. 0640"
        },
        "size" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "size of file in bytes"
        },
        "state_ok" : {
          "type" : "boolean",
          "description" : "flag that tell whether or not it is OK to register/unregister"
        },
        "message" : {
          "type" : "string",
          "description" : "a message to give more information about the state_ok flag"
        },
        "symbolic_type" : {
          "type" : "string",
          "description" : "one of :regular, :symlink, :directory"
        },
        "atime" : {
          "type" : "integer",
          "description" : "access time (an int, since Epoch)"
        },
        "mtime" : {
          "type" : "integer",
          "description" : "modification time (an int, since Epoch)"
        }
      }
    },
    "UserModReq" : {
      "type" : "object",
      "properties" : {
        "user" : {
          "$ref" : "#/definitions/User"
        },
        "no_password_reset_needed" : {
          "description" : "For new user accounts, the user must reset the password at first login",
          "type" : "integer",
          "default" : 0
        },
        "force_password_reset" : {
          "description" : "For existing accounts, boolean to force a password change",
          "type" : "boolean"
        }
      }
    },
    "TagModReq" : {
      "type" : "object",
      "properties" : {
        "tag" : {
          "$ref" : "#/definitions/Tag"
        }
      }
    },
    "GroupModReq" : {
      "type" : "object",
      "properties" : {
        "group" : {
          "$ref" : "#/definitions/Group"
        }
      }
    },
    "UserfileModReq" : {
      "type" : "object",
      "properties" : {
        "userfile" : {
          "$ref" : "#/definitions/Userfile"
        }
      }
    },
    "CbrainTaskModReq" : {
      "type" : "object",
      "properties" : {
        "cbrain_task" : {
          "$ref" : "#/definitions/CbrainTask"
        }
      }
    },
    "MultiUserfilesModReq" : {
      "type" : "object",
      "properties" : {
        "file_ids" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "data_provider_id_for_mv_cp" : {
          "type" : "integer"
        },
        "specified_filename" : {
          "type" : "string",
          "description" : "The name of the archive file that the Userfiles will be compressed into when downloading."
        },
        "operation" : {
          "type" : "string",
          "description" : "Used when affecting the synchronization status of files. Either \"sync_local\" or \"all_newer\". \"sync_local\" will ensure that the version of the file in the CBRAIN portal cache is the most recent version that exists on the Data Provider. \"all_newer\" will ensure that ALL caches known to CBRAIN are updated with the most recent version of the files in the host Data Provider.",
          "default" : "sync_local"
        }
      }
    },
    "MultiRegistrationModReq" : {
      "type" : "object",
      "properties" : {
        "basenames" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "filetypes" : {
          "description" : "An array containing the filetypes associated with the files to register; each element must be a string containing the cbrain file type, a single dash, and then a repeat of the basename found in the basenames parameters. For example, \"TextFile-abc.txt\"",
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "as_user_id" : {
          "type" : "integer",
          "description" : "The ID of the user to unregister files as."
        },
        "delete" : {
          "type" : "boolean",
          "description" : "Specifies to delete the files once when unregistering.",
          "default" : false
        }
      }
    }
  }
}
