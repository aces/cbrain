
<%-
#
# CBRAIN Project
#
# Copyright (C) 2008-2012
# The Royal Institution for the Advancement of Learning
# McGill University
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.  
#
-%>

<% title 'Add New Data Provider' %>

<h2>Add New Data Provider</h2>

<%= error_messages_for(@provider) %>

<%= form_for @provider, :as => :data_provider, :url => { :action => "create" }, :datatype => "script" do |f| -%>
  
  <div class="generalbox">

    <span title="The name of the data provider.">
      <p><%= f.label :name, "Name" %><br/>
      <%= f.text_field :name %></p>
    </span>

    <span title="Brief description of the data provider.">
      <p><%= f.label :description, "Description" %><br/>
      <%= f.text_area :description, :rows => 10, :cols => 40 %><br/>
      <div class="field_explanation">The first line should be a short summary, and the rest are for any special notes for the users.</div>
      </p>
    </span>

    <span title="Time zone where this data provider is located.">
      <p><%= f.label :time_zone, "Time Zone" %><br/>
      <%= f.time_zone_select :time_zone,
          ActiveSupport::TimeZone.all.select { |t| t.name =~ /canada/i },
          { :default => ActiveSupport::TimeZone['Eastern Time (US & Canada)'],
            :include_blank => true }
      %></p>
    </span>

    <span title="Type of data provider.">

      <p><%= f.label :type, "Type" %><br/>
      <%= f.select :type, grouped_options_for_select(@typelist), { :prompt => "Select Provider Type" }, { :disabled => (params[:action].to_sym == :edit) } %><br/>
      <div class="field_explanation"><%= show_hide_toggle "(Data Provider Type Information)", "#data_provider_classes", :class  => 'action_link' %></div>
      </p>

      <div id="data_provider_classes" style="display:none">

        <p>
        This document describes the different types of Data Providers
        implemented in CBRAIN. Not all of them are useful. In production
        environments, the recommended type is the <strong>EnCbrainSmartDataProvider</strong>
        for official data storage and <strong>SshDataProvider</strong> for user-specific
        personal storage.
        </p>

        <hr>

        <strong>SshDataProvider:</strong> This class provides an implementation for a data provider
        where the remote files are accessed through ssh and rsync.
        The provider's files are stored in a flat directory, one
        level deep, directly specified by the object's remote_dir
        attribute. The file "hello" is this stored in a path like this:
        <pre>    /remote_dir/hello</pre>

        <p>

        <strong>EnCbrain*DataProvider:</strong> These three providers are <strong>en</strong>hanced variations
        on the other three Cbrain*DataProviders described above. They differ
        in how the store their files. The path to file is no longer based
        on its owner or the filename, but instead uniquely determined by
        the file's ID. A file named "hello" with ID 41233 will be stored
        like this:
        <pre>    /root_dir/04/12/33/hello</pre>
        Such data providers have the advantage that files can be renamed and
        reassigned to new owners with minimal modifications on the filesystem's
        structure. The EnCbrain*DataProviders are the officially recommended
        data providers for production deployment.
        <p>

        <strong>VaultSshDataProvider:</strong> This class provides an implementation for a data provider
        where the remote files are accessed through ssh and rsync.
        The provider's files are stored in a flat directory, two levels
        deep, directly specified by the object's remote_dir
        attribute and the user's login name. The file "hello"
        of user "myuser" is thus stored into a path like this:
        <pre>    /remote_dir/myuser/hello</pre>
        <p>

        <strong>VaultLocalDataProvider:</strong> This class provides an implementation for a data provider
        where the remote files are not even remote, they are local
        to the currently running rails application. The provider's
        files are stored in a flat directory, two levels
        deep, directly specified by the object's remote_dir
        attribute and the user's login name. The file "hello"
        of user "myuser" is thus stored into a path like this:
        <pre>    /root_dir/myuser/hello</pre>
        where root_dir is the data provider's remote_dir (a local
        directory).
        <p>
        This data provider does not cache anything! The 'remote' files
        are in fact all local, and accessing the 'cached' files mean
        accessing the real provider's files. All methods are adjusted
        so that their behavior is sensible.
        <p>

        <strong>VaultSmartDataProvider:</strong> This class implements a 'wrapper' data provider that
        acts either as a VaultLocalDataProvider or a VaultSshDataProvider
        depending on whether or not the current hostname matches
        the value of the attribute remote_host or is in the alternate_host list.
        This means that in the case where the current Rails application
        runs on the same machine as the data provider, the faster
        and more efficient VaultLocalDataProvider will be used.
        <p>

        <strong>IncomingVaultSshDataProvider:</strong> This class behaves like the
        VaultSshDataProvider, except that it is browsable. When browsing, only
        the subdirectory named like the login name of the current user will
        be visible. It is perfect for accessing
        a jailed remote_dir for incoming content, where users
        can upload files to these subdirectories on other channels.
        <p>

        <strong>S3DataProvider:</strong> This class connects to Amazon's S3
        cloud storage service. The files will be stored in a bucket named
        "gbrain_{name}" where name is the name of the Data Provider.
        Usage of this Data Provider requires obtaining an access key
        and secret token. Do not rename this Data Provider if files
        are registered with it, unless you also rename the bucket!

      </div>
    </span>

    <span title="Owner of this data provider. The owner has full rights to configure and use the data provider.">
      <p><%= f.label :user_id, "Owner" %><br/>
        <%= user_select("data_provider[user_id]", { :selector => @provider }, { :disabled => ! current_user.has_role?(:admin_user) } ) %>
      </p>
    </span>

    <span title="Project ownership of this data provider. Project members will have access to the provider, but will not be able configure it.">
      <p><%= f.label :group_id, "Project" %><br/>
        <%= group_select("data_provider[group_id]", :selector => @provider) %>
      </p>
    </span>

    <span title="Is this data provider currently available for use?">
      <p><%= f.label :online, "Status" %><br/>
      <%= f.select :online, { "Online" => true, "Offline" => false } %></p>
    </span>

    <span title="Is this data provider writable or read-only?">
      <p><%= f.label :read_only, "Mode" %><br/>
      <%= f.select :read_only, { "Read/Write" => false, "Read Only" => true } %></p>
    </span>

    <span title="Is this data provider syncable?">
      <p><%= f.label :not_syncable, "Syncability" %><br/>
      <%= f.select :not_syncable, { "Fully syncable" => false, "NOT syncable" => true } %></p>
    </span>

    <p>

    <fieldset class="groupentry">
      <legend>SSH parameters for remote Data Providers</legend>

      <span title="Name of the remote machine on which the data provider is located (not required for VaultLocalDataProvider).">
        <p><%= f.label :remote_host, "Remote Hostname" %><br/>
        <%= f.text_field :remote_host %></p>
      </span>

      <span title="Alternate name(s) (comma-separated) of the remote machine on which the data provider is located (required only for Smart data providers).">
        <p><%= f.label :alternate_host, "Alternate Hostname(s)" %><br/>
        <%= f.text_field :alternate_host %></p>
      </span>

      <span title="Username on the remote machine where the data provider is located (not required for VaultLocalDataProvider).">
        <p><%= f.label :remote_user, "Remote Username" %><br/>
        <%= f.text_field :remote_user %></p>
      </span>

      <span title="Port number used to access remote machine on which the data provider is located (not required for VaultLocalDataProvider).">
        <p><%= f.label :remote_port, "Remote Port Number" %><br/>
        <%= f.text_field :remote_port, :size => 6 %></p>
      </span>
    </fieldset>

    <p>

    <fieldset class="groupentry">
      <legend>Cloud Storage Configuration</legend>

      <span title="Identifier for cloud storage service.">
        <p><%= f.label :cloud_storage_client_identifier, "Client Identifier" %><br/>
        <%= f.text_field :cloud_storage_client_identifier %></p>
      </span>

      <span title="Token or password for cloud storage service.">
        <p><%= f.label :cloud_storage_client_token, "Client Token" %><br/>
        <%= f.password_field :cloud_storage_client_token, :size => 80 %></p>
      </span>
    </fieldset>

    <p>

    <fieldset class="groupentry">
    <legend>Physical data location</legend>

      <span title="Directory used for storing files">
        <p><%= f.label :remote_dir, "Full Directory Path" %><br/>
        <%= f.text_field :remote_dir, :size => 60 %></p>
      </span>

    </fieldset>

    <p>

    <fieldset class="groupentry">
      <legend>Other properties</legend>

      <p><label for='meta_must_move'>Files must be copied/moved upon registration (browsable DPs only):</label>
      <%= check_box_tag 'meta[must_move]',  "on", @provider.new_record? ? false : !@provider.meta[:must_move].blank? %>

      <p><label for='meta_browse_gid'>Files can be browsed only by members of this project (browsable DPs only):</label>
      <%= group_select 'meta[browse_gid]', { :selector => (@provider.new_record? ? nil : @provider.meta[:browse_gid]) }, { :include_blank => "(Any Users)" } %>

      <p><label for='meta_no_uploads'>Cannot be used for uploading files from the file manager:</label>
      <%= check_box_tag 'meta[no_uploads]', "on", @provider.new_record? ? false : !@provider.meta[:no_uploads].blank? %>

      <p><label for='meta_no_viwers'>Files cannot be viewed in the file manager:</label>
      <%= check_box_tag 'meta[no_viewers]', "on", @provider.new_record? ? false : !@provider.meta[:no_viewers].blank? %>
    </fieldset>

    
  </div>
  <p><%= submit_tag 'Create New Data Provider' %></p>

<% end %>

<div class="display_cell" style="padding-left: 1em;">
  <table>
    <tr><th colspan="2" class="supertitle">Public SSH Key for this CBRAIN Portal</th></tr>
    <tr><td>This key should be installed on the host machines of SSH or Smart Data Providers to allow remote access.</td></tr>
    <tr><td><PRE class="ssh_key"><%= pretty_ssh_key(RemoteResource.current_resource.get_ssh_public_key || 'Unknown! Talk to sysadmin!') %></PRE></td></tr>
  </table>
</div>