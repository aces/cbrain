
<%-
#
# CBRAIN Project
#
# Copyright (C) 2008-2012
# The Royal Institution for the Advancement of Learning
# McGill University
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
-%>


<%= show_table(@custom_filter, :edit_condition => (check_role(:admin_user) || @custom_filter.user_id == current_user.id)) do |t| %>

  <% t.edit_cell(:name) do %>
    <%= text_field_tag "custom_filter[name]", @custom_filter.name %>
  <% end %>

  <%
    file_name_type =
      {
        ''        => "Don't filter name",
        'match'   => 'Match exactly',
        'contain' => 'Contains',
        'begin'   => 'Begins with',
        'end'     => 'Ends with',
      }
  %>

  <% t.edit_cell(:data_file_name_type, :header => "Filename",
                 :content => "#{file_name_type[@custom_filter.data_file_name_type]} #{@custom_filter.data_file_name_term}") do %>
    <%= select :data, :file_name_type, file_name_type.map{|k,v| [v,k]}, :selected => @custom_filter.data_file_name_type %> <%= text_field_tag "data[file_name_term]", @custom_filter.data_file_name_term %>
  <% end %>

   <% t.edit_cell(:data_parent_name_like, :header => "Parent name contains (lists children)") do %>
    <%= text_field_tag "data[parent_name_like]", @custom_filter.data_parent_name_like %>
  <% end %>

  <% t.edit_cell(:data_child_name_like, :header => "Child name contains (lists parents)") do %>
    <%= text_field_tag "data[child_name_like]", @custom_filter.data_child_name_like %>
  <% end %>

  <% t.edit_cell(:data_type, :header => "By file type", :content => (@custom_filter.data_type || []).sort.join(", ")) do %>
      <%= userfile_type_select("data[type]", {:selector => @custom_filter.data_type}, :include_blank => true, :multiple => true ) %>
  <% end %>

  <%
    size =
     {
        ""  => "Don't filter size",
        "1" => "<",
        "2" => ">",
      }
  %>

  <% t.edit_cell(:data_size, :header => "Size", :content => "#{size[@custom_filter.data_size_type]} #{@custom_filter.data_size_type == "" ? "" : @custom_filter.data_size_term}") do %>
    <%= select :data, :size_type, size.map{|k,v| [v,k]} , :selected  => @custom_filter.data_size_type %>
    <%= text_field_tag "data[size_term]", @custom_filter.data_size_type == "" ? "" : @custom_filter.data_size_term %> kb
  <% end %>

  <% t.edit_cell(:data_user_id, :header => "Owner", :content => User.find_by_id(@custom_filter.data_user_id).try(:name) || "None") do %>
    <%= user_select 'data[user_id]', { :users => current_user.available_users, :selector => @custom_filter.data_user_id }, :include_blank => true %>
  <% end %>

  <% t.edit_cell(:data_group_id, :header => "Project", :content => Group.find_by_id(@custom_filter.data_group_id).try(:name) || "None") do %>
    <%= group_select("data[group_id]", { :selector => @custom_filter.data_group_id}, { :include_blank => true })  %>
  <% end %>

  <% t.edit_cell(:data_data_provider_id, :header => "Data Provider", :content => DataProvider.find_by_id(@custom_filter.data_data_provider_id).try(:name) || "None") do %>
    <%= data_provider_select("data[data_provider_id]", { :selector => @custom_filter.data_data_provider_id || '!' }, { :include_blank => true })  %>
  <% end %>

  <%
    archiving_status =
      {
        ""         => "Don't filter by archiving status",
        "archived" => "Archived",
        "none"     => "Not archived",
      }
  %>

  <% t.edit_cell(:data_archiving_status, :header => "Archiving status", :content => archiving_status[@custom_filter.data_archiving_status]) do %>
    <%= select :data, :archiving_status, archiving_status.map{|k,v| [v,k]}, selected: custom_filter.data_archiving_status %>
  <% end %>

  <% t.edit_cell(:data_sync_status, :header => "Synchronization status", :content => (@custom_filter.data_sync_status||[]).join(", ")) do %>
    <%=
    select_tag "data[sync_status]", options_for_select(["InSync","ProvNewer","CacheNewer","Corrupted","ToCache","ToProvider"], :selected => @custom_filter.data_sync_status),
                :multiple => true, :size => 6, :selected => @custom_filter.data_sync_status
    %>
  <% end %>


  <% if current_user.available_tags.count > 0 %>
    <% t.edit_cell(:data_tags_id, :header => "Tags", :content => Tag.where(:id => @custom_filter.data_tag_ids).map(&:name).join(", ")) do %>
      <%=
      select_tag "data[tag_ids]", options_for_select((current_user.available_tags.map { |tags| [tags.name, tags.id] }), :selected => @custom_filter.data_tag_ids),
                :multiple => true, :size => 6, :selected => @custom_filter.data_tag_ids
      %>
    <% end %>
  <% end %>

  <% t.edit_cell(:date_range_display_table, :header => "Filtering by date", :content => date_range_info(@custom_filter)) do %>
    <%= date_range_panel(@custom_filter[:data] || {}, "data") %>
  <% end %>

<% end %>
