
<%-
#
# CBRAIN Project
#
# Copyright (C) 2008-2012
# The Royal Institution for the Advancement of Learning
# McGill University
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
-%>

<div class="menu_bar">
  <%= link_to 'Create User', new_user_path, :class => "button menu_button" %>
</div>

<%=
  render(:partial => 'shared/active_filters', :locals  => {
    :scope => @scope,
    :model => User
  })
%>

<div class="pagination">
  <div class="pagination_center">
    (
      <%= pluralize @users.total_entries, "user" %>
      <% if @unlocked_users_count > 0 %>,
        <%=
          scope_filter_link("#{@unlocked_users_count} active",
            @scope, :set, { :a => 'account_locked', :v => 0 },
            link: { :ajax => true }
          )
        %>
      <% end %>
      <% if @locked_users_count > 0 %>,
        <%=
          scope_filter_link("#{@locked_users_count} locked",
            @scope, :set, { :a => 'account_locked', :v => 1 },
            link: { :ajax => true }
          )
        %>
      <% end %>
    )
  </div>
  <div class="pagination_right_side">
    Search by name: <%= ajax_search_box "name_like", users_path %>
  </div>
</div>

<%=
  dynamic_scoped_table(@users,
    :id         => 'users_table',
    :class      => [ :resource_list ],
    :scope      => @scope,
    :order_map  => {
      :last_connection => { :a => 'last_connected_at' },
      :site            => { :a => 'sites.name', :j => Site }
    },
    :filter_map => {
      :login => { :a => 'account_locked' },
      :site  => { :a => 'site_id' }
    }
  ) do |t|
%>
  <%
    t.pagination

    t.column("Login", :login,
      :sortable => true,
      :filters  => scoped_filters_for(
        @base_scope, @scope, :account_locked,
        format: lambda do |format_info|
          value, label, base, view = *format_info
          label = (!value || value == 0 ? 'Unlocked' : 'Locked')
          {
            :value     => value,
            :label     => "#{label} (of #{base})",
            :indicator => view,
            :empty     => view == 0
          }
        end
      )
    ) do |u|
      link_to_user_if_accessible(u, current_user,
        :html_options => { :class => u.account_locked ? 'error_link' : nil }
      )
    end

    t.column("Full name", :full_name,
      :sortable => true
    )

    t.column("Email", :email,
      :sortable => true
    ) { |u| mail_to u.email }

    t.column("Position", :position,
      :sortable => true
    )

    t.column("Affiliation", :affiliation,
      :sortable => true
    )

    t.column("Last Connection", :last_connection,
      :sortable => true
    ) { |u| u.last_connected_at ? to_localtime(u.last_connected_at, :datetime) : "Unknown" }

    t.column("Projects", :groups) do |u|
      group_names = u.assignable_groups.order(:name).raw_first_column(:name).reject { |n| n == u.login }
      if group_names.size > 1 && group_names.size < 40
        html_tool_tip(pluralize(group_names.size, "project"), :offset_x => 60) do
          array_to_table(group_names,
            :table_class     => 'simple',
            :ratio           => "3:1",
            :fill_by_columns => true
          ) { |name,r,c| name }
        end.html_safe
      elsif group_names.size > 1
        pluralize(group_names.size, "project")
      end
    end

    t.column("Role", :type,
      :sortable => true,
      :filters  => default_filters_for(@base_scope, :type)
    ) { |u| u.type.underscore.titleize }

    t.column("Site", :site,
      :sortable => true,
      :filters  => default_filters_for(@base_scope, Site)
    ) { |u| link_to_site_if_accessible(u.site) }

    t.column("City", :city,
      :sortable => true,
      :filters  => default_filters_for(@base_scope, :city)
    )

    t.column("Country", :country,
      :sortable => true,
      :filters  => default_filters_for(@base_scope, :country)
    )

    t.column("Time Zone", :time_zone,
      :sortable => true,
    ) { |u| u.time_zone || "(Unset)" }

    t.column("Files", :files) do |u|
      size = Userfile.where(:user_id => u.id).sum(:size)
      index_count_filter(@users_file_counts[u.id], :userfiles, { :user_id => u.id }, :show_zeros => 1) +
      (size > 0 ? " (#{colored_pretty_size(size)} used)" : "").html_safe
    end

    t.column("Tasks", :tasks) do |u|
      size = CbrainTask.real_tasks.where(:user_id => u.id).sum(:cluster_workdir_size)
      unk  = CbrainTask.real_tasks.where(:user_id => u.id, :cluster_workdir_size => nil).where("cluster_workdir IS NOT NULL").count
      index_count_filter(@users_task_counts[u.id], :tasks, { :user_id => u.id }, :show_zeros => 1) +
      ( (size  > 0 && unk  > 0) ? " (#{colored_pretty_size(size)} used, #{unk} unkn)" :
        (size  > 0 && unk == 0) ? " (#{colored_pretty_size(size)} used)" :
        (size == 0 && unk  > 0) ? " (#{unk} unkn)" : ""
      ).html_safe
    end

    t.column("Switch", :switch) do |u|
      link_to 'Switch', switch_user_path(u), :class => 'action_link', :method  => :post if u != User.admin
    end

    if current_user.has_role? :admin_user
      t.column("Access", :access) do |u|
        link_to 'Access?',
          {
            :controller => :tool_configs,
            :action     => :report,
            :user_id    => u.id
          },
          :class => 'action_link'
      end
    end
  %>
<% end %>
