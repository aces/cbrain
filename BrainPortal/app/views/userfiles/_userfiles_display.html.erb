
<%-
#
# CBRAIN Project
#
# Copyright (C) 2008-2012
# The Royal Institution for the Advancement of Learning
# McGill University
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
-%>

<%= render :partial => 'shared/active_filters', :locals => { :model => :userfile } %>

<div class="pagination">
  <% if current_session.persistent_userfile_ids.size > 0 %>
    <div class="pagination_left_side">
      <blink><%= html_colorize("(#{pluralize(current_session.persistent_userfile_ids.size," file")} persistently selected)") %></blink>
    </div>
  <% end %>
  <div class="pagination_right_side">
    Search by name: <%= ajax_search_box "name_like", userfiles_path(:update_filter => :filter_hash) %>
  </div>
</div>

<%=
  dynamic_index_table(@userfiles,
    :id           => 'userfiles_table',
    :request_type => :server_javascript,
    :sort_map     => {
      :name           => 'userfiles.name',
      :type           => 'userfiles.type',
      :login          => 'users.login',
      :creation_date  => 'userfiles.created_at',
      :size           => 'userfiles.size',
      :group          => 'groups.name',
      :group_writable => 'userfiles.group_writable',
      :data_provider  => 'data_providers.name'
    },
    :filter_map   => {
      :login          => 'user_id',
      :group          => 'group_id',
      :data_provider  => 'data_provider_id'
    }
  ) do |t|
%>
  <%
    filters_for = lambda do |target,options = {}|
      return unless @filtered_scope && @header_scope
      if target.is_a?(Symbol)
        basic_filters_for(@filtered_scope, @header_scope, Userfile, target)
      else
        association_filters_for(@filtered_scope, @header_scope, Userfile, target, options)
      end
    end

    t.paginate(@per_page > 50 ? :both : :top)

    t.row do |u|
      {
        :selected     => current_session.persistent_userfile_ids[u.id.to_s],
        :select_param => 'file_ids[]',
        :select_value => u.id
      } if u.available?
    end

    t.column("Filename", :name,
      :sortable => true
    ) do |u|
      filename_listing(u,
        :html_options => { :class      => ('error_link' unless u.available?) },
        :query_params => { :sort_index => (@current_offset + @userfiles.index(u) if @current_offset) }
      )
    end

    t.column("File Type", :type,
      :field_name => :pretty_type,
      :sortable   => true,
      :filters    => filters_for.(:type)
    )

    t.column("Owner", :login,
      :sortable => true,
      :filters  => filters_for.(User, :name_method => "login")
    ) { |u| link_to_user_if_accessible(u.user) }

    t.column("Creation Date", :creation_date,
      :sortable => true
    ) do |u|
      html_tool_tip(to_localtime(u.created_at, :date), :offset_x => 0, :offset_y => 20) do
        ("Created: #{u.created_at.in_time_zone.strftime("%a %b %d, %Y at %H:%M:%S %Z")} <br />" +
         "Updated: #{u.updated_at.in_time_zone.strftime("%a %b %d, %Y at %H:%M:%S %Z")}").html_safe
      end
    end
  %>

  <%
    t.column("Size", :size,
      :sortable => true
    ) do |u|
  %>
    <%= u.archived? ? archived_icon : "" %>
    <% if u.size.present?  %>
      <span title="<%= u.size %> bytes"><%= u.archived ? colored_pretty_size(u.size) : colored_format_size(u) %></span>
    <% else %>
      <%= html_colorize("unknown","red") %>
    <% end %>
    <% if u.archived? %>
      <% before_archiving_size      = u.meta[:before_archiving_size].presence %>
      <% before_archiving_num_files = u.meta[:before_archiving_num_files].presence %>
      <% if before_archiving_size || before_archiving_num_files %>
      (was:
        <%= colored_pretty_size(before_archiving_size) %> in
        <%= before_archiving_num_files ? view_pluralize(before_archiving_num_files, "file") + ")" : "unknown)" %>
      <% end %>
    <% end %>
  <% end %>

  <%
    t.column("Tags", :tags,
      :filters => @tag_filters
    ) do |u|
      u.get_tags_for_user(current_user)
        .collect { |t| h(t.name) }
        .join("<br />")
        .html_safe
    end

    unless current_project
      t.column("Project", :group,
        :sortable => true,
        :filters  => filters_for.(Group)
      ) do |u|
        link_to_group_if_accessible(u.group) if u.group
      end
    end

    t.column("Project Access", :group_writable,
      :sortable => true
    ) do |u|
      u.group_writable ? 'Read/Write' : 'Read Only' if u.group
    end

    t.column("Provider", :data_provider,
      :sortable => true,
      :filters  => filters_for.(DataProvider)
    ) do |u|
      link_to_data_provider_if_accessible(u.data_provider)
    end

    t.column("Description") do |u|
      html_tool_tip(crop_text_to(40, u.description), :offset_x => 0, :offset_y => 20) do
        simple_format(u.description, :sanitize => true)
      end if u.description.present?
    end
  %>
<% end %>
