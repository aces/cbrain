
<%-
#
# CBRAIN Project
#
# Copyright (C) 2008-2012
# The Royal Institution for the Advancement of Learning
# McGill University
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
-%>

<% title('File Info') %>

<div class="menu_bar">
  <% if @userfile.can_be_accessed_by?(current_user, requested_access = :write) %>
    <%= link_to 'Delete', { :action => 'delete_files', :file_ids => [@userfile.id] }, :confirm => "Are you sure you want to delete '#{@userfile.name}' ?", :class  => "button menu_button", :method => :delete  %>
  <% end %>
  <% if @userfile.can_be_accessed_by?(current_user, requested_access = :read) %>
    <%= link_to(@userfile.is_a?(FileCollection) ? "Download Collection" : "Download File", { :action => 'download', :file_ids => [@userfile.id] }, :class => "button menu_button", :method  => :get) %>
  <% end %>
</div>

<br>
<%= error_messages_for @userfile, :header_message => "#{@userfile.name} could not be updated." %>
<div class="display_inline_block" style="min-width: 50%">
  <%= show_table(@userfile) do |t| %>

    <% t.edit_cell(:name, :disabled => !@userfile.has_owner_access?(current_user)) do %>
      <%= text_field_tag "userfile[name]", @userfile.name %>
    <% end %>

    <% t.cell("Created at") do %>
      <%= h(to_localtime(@userfile.created_at,:datetime)) %>
      (<%= pretty_elapsed(Time.now - @userfile.created_at, :num_components => 3) %> ago)
    <% end %>

    <% t.cell("Type") do %>
      <%= inline_edit_field(@userfile, :type, :content => @userfile.pretty_type, :disabled => !@userfile.has_owner_access?(current_user)) do %>
        <% u_type = @userfile.is_a?(SingleFile) ? ["SingleFile"] : ["FileCollection"] %>
        <%= userfile_type_select("userfile[type]", {:userfile_types => u_type, :selector => @userfile.class.name}) %>
      <% end %>
      <% if @userfile.class.to_s =~ /^(SingleFile|FileCollection)$/ && @userfile.suggested_file_type &&  @userfile.suggested_file_type != @userfile.class %>
        (<span class="warning">This file appears to be a <%= @userfile.suggested_file_type.pretty_type %>.</span>)
      <% end %>
    <% end %>

    <% t.cell("Modified at") do %>
      <%= to_localtime(@userfile.updated_at,:datetime) %>
      (<%= pretty_elapsed(Time.now - @userfile.updated_at, :num_components => 3) %> ago)
    <% end %>

    <% t.cell("Size") do %>
      <% if @userfile.archived? %>
        <!-- Information after compression -->
        <%= archived_icon %>
        <%= colored_pretty_size(@userfile.size) %>
        <% if @userfile.size && @userfile.size >= 1_000 -%>
          = <%= @userfile.size %> bytes
        <% end %>
        <!-- Information before compression -->
        <% before_archiving_size      = @userfile.meta[:before_archiving_size].presence %>
        <% before_archiving_num_files = @userfile.meta[:before_archiving_num_files].presence %>
        <% if before_archiving_size || before_archiving_num_files %>
          <br>
          Was:
            <%= colored_pretty_size(before_archiving_size) %> in
            <%= before_archiving_num_files ? view_pluralize(before_archiving_num_files, "file") : "unknown" %>
            <% if before_archiving_size && before_archiving_size >= 1_000 -%>
              = <%= before_archiving_size %> bytes
            <% end %>
         <% end %>
      <% else %>
        <%= colored_format_size(@userfile) %>
        <% if @userfile.size && @userfile.size >= 1_000 -%>
          = <%= @userfile.size %> bytes
        <% end %>
      <% end %>
    <% end %>

    <% t.cell("Data Provider") do %>
      <%= link_to_data_provider_if_accessible(@userfile.data_provider) %>
      ( <%= @userfile.data_provider.class.to_s %> )
      <%= "Cached: " unless @userfile.sync_status.blank? %>
      <% @userfile.sync_status.each do |syncstat| %>
        <%= render :partial => 'syncstatus', :locals => { :syncstat => syncstat } %>
      <% end %>
    <% end %>

    <% t.edit_cell(:user_id, :content => link_to_user_with_tooltip(@userfile.user), :disabled => !(current_user.available_users.include?(@userfile.user) && @userfile.data_provider.allow_file_owner_change?), :header => "Owner") do %>
      <%= user_select("userfile[user_id]", { :selector => @userfile }) %>
    <% end %>

    <% t.edit_cell(:group_id, :header => "Project", :content => link_to_group_if_accessible(@userfile.group), :disabled => (!@userfile.has_owner_access?(current_user))) do %>
      <%= group_select 'userfile[group_id]', { :groups => current_user.available_groups, :selector => @userfile.group_id.to_s } %>
    <% end  %>

    <% t.edit_cell(:tag_ids, :header => "Tags", :content => @userfile.get_tags_for_user(current_user).map(&:name).join(", ")) do %>
      <select name="tag_ids[]" multiple="multiple" style="width:150px" >
        <%= options_from_collection_for_select current_user.available_tags, 'id', 'name', @userfile.get_tags_for_user(current_user).map(&:id) %>
      </select>
    <% end %>

    <% t.edit_cell(:group_writable, :header => "Project permission on file", :content => (@userfile.group_writable? ? "Read/Write" : "Read"), :disabled => !@userfile.has_owner_access?(current_user)) do %>
      <%= select_tag("userfile[group_writable]", options_for_select([['Read Only', false],['Read/Write', true]])) %>
    <% end %>

    <% t.edit_cell("Hidden file", :content => check_box_tag(nil ,nil, @userfile.hidden?, :disabled => true) + "&nbsp;".html_safe + hidden_icon, :disabled => (!@userfile.has_owner_access?(current_user))) do %>
      <%= hidden_field_tag "userfile[hidden]", "0" %>
      <%= check_box_tag("userfile[hidden]",    "1", @userfile.hidden?) %>
      <%= hidden_icon %>
    <% end %>

    <% t.edit_cell("Immutable file", :content => check_box_tag(nil ,nil, @userfile.immutable?, :disabled => true) + "&nbsp;".html_safe + immutable_icon, :disabled => (!@userfile.has_owner_access?(current_user))) do %>
      <%= hidden_field_tag "userfile[immutable]", "0" %>
      <%= check_box_tag("userfile[immutable]",    "1", @userfile.immutable?) %>
      <%= immutable_icon %>
    <% end %>

    <% if @userfile.parent %>
      <% t.cell("Parent") { link_to_userfile_if_accessible(@userfile.parent) } %>
      <% t.empty_cell %>
    <% end %>

    <% if @userfile.children.present? %>
      <% t.cell("Children", :show_width => 2) do %>
        <%= array_to_table(@userfile.children.sort {|a,b| a.name.casecmp(b.name)}, :table_class => 'simple', :min_data => 3, :cols => 3, :fill_by_columns => true ) do |u,r,c| %>
          <%= link_to_userfile_if_accessible(u) %>
        <% end %>
      <% end %>
    <% end %>


    <% if current_user.has_role? :admin_user %>
      <% t.attribute_cell(:cache_full_path, :header => "Local Data Provider (cache) path", :show_width => 2) %>
      <% if @userfile.data_provider.respond_to?(:provider_full_path) %>
        <% t.cell("Remote Data Provider path", :show_width => 2) do %>
          <%= @userfile.data_provider.provider_full_path(@userfile) %>
        <% end %>
      <% end %>
    <% end %>

    <% t.edit_cell(:description, :content => simple_format(@userfile.description, :sanitize => true), :show_width => 2, :disabled => (!@userfile.has_owner_access?(current_user))) do %>
      <%= text_area_tag "userfile[description]", @userfile.description, :rows => 10, :cols => 80 %>
    <% end %>

  <% end %>

  <br>

  <%= file_link_table(@previous_userfile, @next_userfile, @sort_index, :html  => {:class  => "action_link"}) %>

  <br>



  <fieldset>
    <legend>Content</legend>

    <% if @userfile.archived? %>
      <%= html_colorize("This #{@userfile.pretty_type} has been archived.", 'red') %><br>
      Content viewers are disabled until the file is unarchived.
    <% else %>
      <% if ! @userfile.can_be_accessed_by?(current_user, :read) %>

        (This file cannot be viewed by you; I wonder how you got here.)

      <% elsif @userfile.data_provider.meta[:no_viewers] %>

        (This file cannot be viewed as it is stored on Data Provider
        <%= link_to_data_provider_if_accessible(@userfile.data_provider) %>
        which is marked as <strong>non-viewable</strong>)

      <% elsif @userfile.data_provider.not_syncable? %>

        (This file cannot be viewed as it is stored on Data Provider
        <%= link_to_data_provider_if_accessible(@userfile.data_provider) %>
        which is configured to <strong>not allow synchronization</strong> <em>at all</em>)

      <% elsif @sync_status == "Corrupted" %>

        <span style="background-color: pink;">
          (The content of this file seems to be corrupted. This might be the result
          of a bad data transfer while it was being created or a filesystem failure.
          There isn't much you can do about this, although if the file was produced
          by a task, consider restarting the task's Post Processing stage.)
        </span>

      <% elsif ! @userfile.data_provider.rr_allowed_syncing? %>

        (This file cannot be viewed as it is stored on Data Provider
        <%= link_to_data_provider_if_accessible(@userfile.data_provider) %>
        which is configured to <strong>not allow synchronization</strong> to <em>this Portal</em>)

      <% elsif (! @userfile.is_locally_synced?) && (! @userfile.data_provider.online?) %>

        (This data is not currently synchronized and its Data Provider
        <%= link_to_data_provider_if_accessible(@userfile.data_provider) %>
        is offline, so its content is not viewable for the moment)

      <% elsif @userfile.is_locally_synced? && @userfile.viewers.blank? %>

        (The contents of this file cannot be viewed: no viewer code available at this moment
        for files of type '<%= @userfile.pretty_type %>')

      <% else %>

        <% if ! @userfile.is_locally_synced? %>
          <% if @sync_status =~ /^To/ %>
            (This data file is currently being synchronized. Wait a few seconds for this to complete)
          <% else %>
            (This data file is not currently synchronized. Click
            <%= link_to "here", sync_multiple_userfiles_path(:file_ids => [ @userfile.id ], :back_to_show_page => 1), :method  => :post %>
            to start the synchronization process.
            This may allow you to view displayable content<% if @userfile.is_a?(FileCollection) %> and extract files from this collection<% end %>).
          <% end %>
          <br>
        <% end %>

        <% if @userfile.viewers.size > 1 %>
            Change view:
            <%= select_tag "viewer", options_for_select(@userfile.viewers.map { |v| [v.name, v.name] }, @userfile.class.name.underscore),
                           :class        => :request_on_change,
                           "data-target" => "#userfile_viewer",
                           "data-url"    => display_userfile_path(@userfile)
            %>
          <br>
        <% end  %>

        <div id="userfile_viewer">
          <div class="display_userfile">
            <% begin %>
              <% if @viewer %>
                <%= render :file  => @viewer.partial_path %>
              <% end %>
            <% rescue ActionView::Template::Error => e %>
              <span class="warning">
                An error occured when loading the viewer plugin.
              </span>
              <% raise e.original_exception unless Rails.env == 'production' %>
              <% ExceptionLog.log_exception(e.original_exception, current_user, request) %>
            <% end %>
          </div>
        </div>
      <% end %>
    <% end %>
  </fieldset>

</div>

<P>
<%= render :partial => "layouts/log_report", :locals  => { :log  => @log, :title => 'File Log' } %>

