@import "<%= asset_path './normalize.css' %>";

/*
  LEGEND
  ├── BREAKPOINTS
  ├── PALETTE
  ├── FONTS
  ├── LOGOS
  ├── SHADOWS
  ├── SPACE
  ├── TRANSITIONS
  ├── BUTTONS
  ├── BANNERS
  ├── ERRORS
  ├── EMPTY
  ├── FORMS
  ├── CARDS
  ├── TABLES
  ├── TOOLBAR
  ├── FOOTER
  ├── PAGES
    ├── BASE
    ├── SESSIONS
    ├── SIGNUPS
    ├── PROJECTS
    ├── USERS
    ├── INVITATIONS
    ├── DASHBOARD
  └── 

/*
=============================================================
| BREAKPOINTS
=============================================================
*/

$BREAKPOINT_XS: 20em; // 320px
$BREAKPOINT_SM: 30em; // 480px
$BREAKPOINT_MD: 48em; // 768px
$BREAKPOINT_LG: 64em; // 1024px

/*
=============================================================
| PALETTE
=============================================================
*/

$DEFAULT_BG: #ffffff;
$DEFAULT_WASH: #f9fcfe;
$DEFAULT_ALT: #787a7a;
$DEFAULT_DK: #343434;
$DEFAULT_TEXT: #000000;
$DEFAULT_DISABLED: #e5e5e5;

$PRIMARY_BG: #ff0000;
$PRIMARY_WASH: #ffeeee;
$PRIMARY_ALT: #e8182b;
$PRIMARY_DK: #9b0000;
$PRIMARY_TEXT: #b91f20;

$SECONDARY_BG: #25bfc1;
$SECONDARY_WASH: #effafa;
$SECONDARY_ALT: #00a1a0;
$SECONDARY_DK: #003943;
$SECONDARY_TEXT: #008484;

$SUCCESS_BG: #51b83c;
$SUCCESS_WASH: #bbe5b3;
$SUCCESS_DK: #00663c;

$ERROR_BG: #f07171;
$ERROR_ALT: #e22f2f;
$ERROR_WASH: #fcc2c2;
$ERROR_DK: #85000c;

$ORCID_BG: #31789b;
$ORCID_ALT: #a6ce39;

.default-dk {
  color: $DEFAULT_DK;
}

.default-bg {
  color: $DEFAULT_BG;
}

.bg-default-wash {
  background-color: $DEFAULT_WASH;
}

.bg-primary-alt {
  background-color: $PRIMARY_ALT;
}

.bg-default-disabled {
  background-color: $DEFAULT_DISABLED;
}

.bg-default-alt {
  background-color: $DEFAULT_DK;
}

/*
=============================================================
| FONTS
=============================================================
$variant : xs, sm, md, lg, xl.
*/

@mixin title($variant) {
  font-family: "system-ui", sans-serif;
  font-weight: 600;
  line-height: 1.5;
  -webkit-font-smoothing: auto;
  letter-spacing: 0;

  @if $variant == "xxs" {
    font-size: 0.75rem;
  }
  @if $variant == "xs" {
    font-size: 0.875rem;
  }
  @if $variant == "sm" {
    font-size: 1rem;
  }
  @if $variant == "md" {
    font-size: 1.25rem;
  }
  @if $variant == "lg" {
    font-size: 1.5rem;
  }
  @if $variant == "xl" {
    font-size: 2rem;
  }
}

@mixin text($variant) {
  font-family: "system-ui", sans-serif;
  font-weight: 400;
  line-height: 1.5;
  -webkit-font-smoothing: auto;
  letter-spacing: 0;
  @if $variant == "xxs" {
    font-size: 0.65rem;
  }
  @if $variant == "xs" {
    font-size: 0.75rem;
  }
  @if $variant == "sm" {
    font-size: 0.875rem;
  }
  @if $variant == "md" {
    font-size: 1rem;
  }
  @if $variant == "lg" {
    font-size: 1.25rem;
  }
  @if $variant == "xl" {
    font-size: 1.5rem;
  }
}

@mixin text-button($color: $DEFAULT_TEXT, $opacity: 1, $size: "xs") {
  @include title($size);

  -webkit-font-smoothing: antialiased;
  text-transform: uppercase;
  font-weight: 600;
  letter-spacing: 0.089em;
  opacity: $opacity;
  color: $color;
}

.title-xs {
  @include title("xs");
}

.title-sm {
  @include title("sm");
}

.title-md {
  @include title("md");
}

.title-lg {
  @include title("lg");
}

.title-xl {
  @include title("xl");
}

.text-xs {
  @include text("xs");
}

.text-sm {
  @include text("sm");
}

.text-md {
  @include text("md");
}

.text-lg {
  @include text("lg");
}

.text-xl {
  @include text("xl");
}

.text-ellipsis {
  text-overflow: ellipsis;
  white-space: nowrap;
  overflow: hidden;
}

.text-uppercase {
  text-transform: uppercase !important;
}

/*
=============================================================
| LAYOUT
=============================================================
A few shortcut often-used alignment classes.
*/

.d-flex {
  display: flex;
}

.justify-center {
  justify-content: center;
}

.align-center {
  align-items: center;
}

.text-center {
  text-align: center;
}

.flex-1 {
  flex: 1;
}
/*
=============================================================
| LOGOS
=============================================================
$variant : wordmark, lettermark, icon.
$color   : black, white, RGB, grayscale.
$size    : xs, ssm, md, lg
*/

@mixin logoImg($variant, $color) {
  background-image: url(<%=asset_path"/images/neurohub/NH_\#{$variant}_\#{$color}.png"%>);
  background-repeat: no-repeat;
  background-size: contain;
}

@mixin logo($variant: "wordmark", $color: "RGB", $size: "md") {
  @include logoImg($variant, $color);
  @if $variant != "icon" {
    @if $size == "xs" {
      width: 5rem;
      height: 2rem;
    }
    @if $size == "sm" {
      width: 8rem;
      height: 3rem;
    }
    @if $size == "md" {
      width: 10rem;
      height: 4rem;
    }
    @if $size == "lg" {
      width: 12rem;
      height: 4rem;
    }
  } @else {
    @if $size == "xs" {
      width: 2rem;
      height: 2rem;
    }
    @if $size == "sm" {
      width: 3rem;
      height: 3rem;
    }
    @if $size == "md" {
      width: 4rem;
      height: 4rem;
    }
    @if $size == "lg" {
      width: 5rem;
      height: 5rem;
    }
  }
}

/*
=============================================================
| SHADOWS
=============================================================
$variant : xlow, low, mid, high.
*/

@mixin shadow($variant) {
  @if $variant == "xlow" {
    box-shadow: rgba(0, 0, 0, 0.12) 0px 1px 6px, rgba(0, 0, 0, 0.12) 0px 1px 4px;
  }
  @if $variant== "low" {
    box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),
      0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);
  }
  @if $variant == "mid" {
    box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),
      0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);
  }
  @if $variant == "high" {
    box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),
      0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 3px 10px 3px rgba(0, 0, 0, 0.16);
  }
}

/*
=============================================================
| SPACE
=============================================================
$index : where 0 <= index < length of sizes array.

This generates bootstrap-like padding and margin classes.
They following classes are available:

%p, %px, %py, %pt, %pb, %pl, %prs
%m, %mx, %my, %mt, %mb, %ml, %mr

followed by an integer that represents the index of the
desired size from the sizes array e.g. py-2 = 0.5rem.

Note: @mixin is used in favour of not using @extend, but
classes are generated for inline style needs.
*/

$sizes: 0rem, 0.25rem, 0.5rem, 0.75rem, 1rem, 1.25rem, 1.5rem, 2rem, 2.5rem,
  3rem, 4rem, 5rem, 6rem, 8rem;

@function space($index) {
  @return nth($sizes, $index + 1);
}

@mixin p($index) {
  padding: space($index); // lists in scss are not zero-indexed.
}

@mixin px($index) {
  padding-left: space($index);
  padding-right: space($index);
}

@mixin pl($index) {
  padding-left: space($index);
}

@mixin pr($index) {
  padding-right: space($index);
}

@mixin py($index) {
  padding-top: space($index);
  padding-bottom: space($index);
}

@mixin pt($index) {
  padding-top: space($index);
}

@mixin pb($index) {
  padding-bottom: space($index);
}

@mixin m($index) {
  margin: space($index); // lists in sass are not zero-indexed.
}

@mixin mx($index) {
  margin-left: space($index);
  margin-right: space($index);
}

@mixin ml($index) {
  margin-left: space($index);
}

@mixin mr($index) {
  margin-right: space($index);
}

@mixin my($index) {
  margin-top: space($index);
  margin-bottom: space($index);
}

@mixin mt($index) {
  margin-top: space($index);
}

@mixin mb($index) {
  margin-bottom: space($index);
}

@each $size in $sizes {
  .p-#{index($sizes,$size)-1} {
    @include p(index($sizes, $size)-1);
  }
  .px-#{index($sizes,$size)-1} {
    @include px(index($sizes, $size)-1);
  }
  .py-#{index($sizes,$size)-1} {
    @include py(index($sizes, $size)-1);
  }
  .pt-#{index($sizes,$size)-1} {
    @include pt(index($sizes, $size)-1);
  }
  .pb-#{index($sizes,$size)-1} {
    @include pb(index($sizes, $size)-1);
  }
  .pr-#{index($sizes,$size)-1} {
    @include pr(index($sizes, $size)-1);
  }
  .pl-#{index($sizes,$size)-1} {
    @include pl(index($sizes, $size)-1);
  }
  .m-#{index($sizes,$size)-1} {
    @include m(index($sizes, $size)-1);
  }
  .mx-#{index($sizes,$size)-1} {
    @include mx(index($sizes, $size)-1);
  }
  .my-#{index($sizes,$size)-1} {
    @include my(index($sizes, $size)-1);
  }
  .mt-#{index($sizes,$size)-1} {
    @include mt(index($sizes, $size)-1);
  }
  .mb-#{index($sizes,$size)-1} {
    @include mb(index($sizes, $size)-1);
  }
  .mr-#{index($sizes,$size)-1} {
    @include mr(index($sizes, $size)-1);
  }
  .ml-#{index($sizes,$size)-1} {
    @include ml(index($sizes, $size)-1);
  }
}

.text-italic {
  font-style: italic;
}

/*
=============================================================
| TRANSITIONS
=============================================================
$variant : hover
$state   : on, off
*/

$TRANSITION_HOVER_ON: all 0.2s ease-in;
$TRANSITION_HOVER_OFF: all 0.2s ease-out;

/*
=============================================================
| BUTTONS
=============================================================
*/

.btn {
  @include px(5);
  @include py(2);
  @include text-button($DEFAULT_BG);

  outline: none;
  transition: $TRANSITION_HOVER_OFF;
  text-decoration: none;
  justify-content: center;

  &:hover {
    cursor: pointer;
    transition: $TRANSITION_HOVER_ON;
  }
}

.btn-solid,
.btn-outline {
  @extend .btn;
  @include shadow("low");
  border-radius: 4px;
  border: 1px solid;
  transition: $TRANSITION_HOVER_OFF;

  &:hover {
    @include shadow("mid");
    transition: $TRANSITION_HOVER_ON;
  }
}

.btn-solid-orcid {
  @extend .btn-solid;
  background-color: $ORCID_BG;
  border-color: $ORCID_BG;
  color: $DEFAULT_BG;
  &:hover {
    background-color: $ORCID_ALT;
    border-color: $ORCID_ALT;
    color: $DEFAULT_BG;
  }
}

.btn-solid-default {
  @extend .btn-solid;
  background-color: $DEFAULT_ALT;
  border-color: $DEFAULT_ALT;
  color: $DEFAULT_BG;
  &:hover {
    background-color: $DEFAULT_BG;
    border-color: $DEFAULT_BG;
    color: $DEFAULT_ALT;
  }
}

.btn-solid-primary {
  @extend .btn-solid;
  background-color: $PRIMARY_ALT;
  border-color: $PRIMARY_ALT;
  color: $DEFAULT_BG;
  &:hover {
    background-color: $PRIMARY_BG;
    border-color: $PRIMARY_BG;
  }
}

.btn-solid-secondary {
  @extend .btn-solid;
  background-color: $SECONDARY_ALT;
  border-color: $SECONDARY_ALT;
  color: $DEFAULT_BG;
  &:hover {
    background-color: $SECONDARY_BG;
    border-color: $SECONDARY_BG;
    color: $DEFAULT_BG;
  }
}

.btn-outline-default {
  @extend .btn-outline;
  background-color: $DEFAULT_BG;
  border-color: $DEFAULT_ALT;
  color: $DEFAULT_DK;
  &:hover {
    background-color: $DEFAULT_WASH;
    border-color: $DEFAULT_ALT;
  }
}

.btn-outline-primary {
  @extend .btn-outline;
  background-color: $DEFAULT_BG;
  border-color: $PRIMARY_ALT;
  color: $PRIMARY_ALT;
  &:hover {
    background-color: $PRIMARY_WASH;
    border-color: $PRIMARY_ALT;
  }
}

.btn-outline-secondary {
  @extend .btn-outline;
  background-color: $DEFAULT_BG;
  border-color: $SECONDARY_ALT;
  color: $SECONDARY_ALT;
  &:hover {
    background-color: $SECONDARY_WASH;
    border-color: $SECONDARY_ALT;
  }
}

.btn-disabled {
  @extend .btn;
  @include text-button($DEFAULT_TEXT, 0.5);

  &:hover {
    @include shadow("low");
    cursor: not-allowed;
  }
}

.btn-disabled-default {
  @extend .btn-disabled;
  background-color: $DEFAULT_DISABLED;
  border-color: $DEFAULT_DISABLED;
}

.btn-disabled-primary {
  @extend .btn-disabled;
  background-color: $PRIMARY_WASH;
  border-color: $PRIMARY_WASH;
  color: $PRIMARY_TEXT;
}

.btn-disabled-default {
  @extend .btn-disabled;
  background-color: $SECONDARY_WASH;
  border-color: $SECONDARY_WASH;
  color: $SECONDARY_TEXT;
}

.btn-text {
  @extend .btn;
  text-transform: unset;
  text-decoration: underline;
  text-align: center;
  display: flex;
  align-items: center;
}

.btn-text-default {
  @extend .btn-text;
  color: $DEFAULT_ALT;
  &:hover {
    background-color: $DEFAULT_WASH;
    border-color: $DEFAULT_WASH;
    color: $DEFAULT_TEXT;
  }
}

.btn-text-primary {
  @extend .btn-text;
  color: $PRIMARY_TEXT;
  &:hover {
    background-color: $PRIMARY_WASH;
    color: $PRIMARY_BG;
  }
}

.btn-text-secondary {
  @extend .btn-text;
  color: $SECONDARY_TEXT;
  &:hover {
    background-color: $SECONDARY_WASH;
    color: $SECONDARY_BG;
  }
}

.btn-nav {
  @extend .btn-text-default;
  text-decoration: none;
  border-bottom: 2px solid transparent;
  color: $DEFAULT_ALT;
}

.btn-nav-default {
  @extend .btn-nav;
  &:hover,
  &[data-active="true"] {
    background: $DEFAULT_WASH;
    border-color: $DEFAULT_BG;
    color: $DEFAULT_BG;
  }
}

.btn-nav-primary {
  @extend .btn-nav;
  &:hover,
  &[data-active="true"] {
    background: $PRIMARY_WASH;
    border-color: $PRIMARY_BG;
    color: $PRIMARY_BG;
  }
}

.btn-nav-secondary {
  @extend .btn-nav;
  &:hover,
  &[data-active="true"] {
    background: $SECONDARY_WASH;
    border-color: $SECONDARY_BG;
    color: $SECONDARY_BG;
  }
}

.btn-section {
  @include py(7);
  @include mt(4);
  width: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  background: $DEFAULT_WASH;
  flex-direction: column;
  > * {
    flex: 1;
    width: 100%;
  }
}

/*
=============================================================
| BANNERS
=============================================================
$variant : error, notice
*/

@mixin banner($variant: "error") {
  @include p(2);
  @include text("sm");
  @include shadow("low");
  width: 100%;
  @if ($variant == "notice") {
    background-color: $SUCCESS_WASH;
    border: 1px solid $SUCCESS_BG;
    color: $SUCCESS_DK;
  }
  @if ($variant == "error") {
    background-color: $ERROR_WASH;
    border: 1px solid $ERROR_BG;
    color: $ERROR_DK;
  }
}

.flash_error {
  @include banner("error");
  @include px(7);
}

.flash_notice {
  @include banner("notice");
  @include px(7);
  z-index: 1000;
}

/*
=============================================================
| ERRORS
=============================================================
*/

.errorExplanation {
  @include banner("error");
  h2 {
    font-weight: 700;
  }
  ul {
    @include mx(4);
    list-style: disc;
    li {
      @include mx(4);
    }
  }
}

/*
=============================================================
| EMPTY
=============================================================
*/

.empty {
  @include p(4);
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  .empty-wrapper {
    display: flex;
    flex-direction: column;
    align-items: center;
    .empty-icon {
      @include pb(4);
      width: 100%;
    }
    .empty-text {
      @include py(4);
      @include text("sm");
      color: $DEFAULT_ALT;
      text-align: center;
    }
  }
}

/*
=============================================================
| FORMS
=============================================================
*/

@mixin form-layout() {
  @include py(4);
  @include px(4);
  @media (min-width: $BREAKPOINT_SM) {
    @include px(7);
  }
  @media (min-width: $BREAKPOINT_MD) {
    padding-left: 15%;
    padding-right: 15%;
  }
  @media (min-width: $BREAKPOINT_LG) {
    padding-left: 20%;
    padding-right: 20%;
  }
}

@mixin form($theme: "secondary") {
  @include title("sm");
  > * {
    @include form-layout();
  }

  width: 100%;
  left: 0;
  background: $DEFAULT_BG;

  fieldset {
    @include field($theme);
  }
}

@mixin field($theme: "default") {
  @include text("sm");
  display: flex;
  flex-direction: column;
  label {
    @include label();
  }
  select {
    @include select($theme);
  }
  input:not([type="submit"]),
  p {
    @include input($theme);
  }
  textarea {
    @include textarea($theme);
  }
  p {
    border: 0;
    cursor: auto;
  }

  &:hover,
  &:focus-within {
    background: $DEFAULT_WASH;
    border-radius: 4px;
  }
  &:focus-within {
    label {
      @include label($theme);
    }
    input {
      @include input($theme);
    }
    textarea {
      @include textarea($theme);
    }
  }
}

@mixin label($theme: "default") {
  @include mt(1);
  @include title("xxs");
  color: $DEFAULT_ALT;
  text-transform: uppercase;

  @if $theme == "secondary" {
    color: $SECONDARY_TEXT;
  }
  @if $theme == "primary" {
    color: $PRIMARY_TEXT;
  }
  &[data-required] {
    position: relative;
    &:after {
      content: "*";
      position: absolute;
    }
  }
}

@mixin input($theme: "default") {
  @include mt(1);
  @include p(1);
  @include text("sm");
  width: 100%;
  background: none;
  border: 1px solid $DEFAULT_WASH;
  cursor: pointer;

  @if ($theme == "primary") {
    border: 0;
    border-bottom: 1px solid $DEFAULT_DISABLED;
    border-radius: 2px;
    outline: 0;

    &:focus {
      outline: 0;
      border-color: $PRIMARY_ALT;
      box-shadow: none;
    }
  }

  @if ($theme == "secondary") {
    border: 0;
    border-bottom: 1px solid $DEFAULT_DISABLED;
    border-radius: 2px;
    outline: 0;

    &:focus {
      outline: 0;
      border-color: $SECONDARY_ALT;
      box-shadow: none;
    }
  }
}

@mixin select($theme: "default") {
  @include mt(1);
  @include p(1);
  @include text("sm");
  background: $DEFAULT_BG;
  width: 100%;
  height: 2rem;
  &:focus {
    outline: auto $DEFAULT_DISABLED 5px;
    border-color: $DEFAULT_WASH;
    box-shadow: none;
    @if $theme == "secondary" {
      outline: auto $SECONDARY_ALT 5px;
      border-color: $SECONDARY_ALT;
      box-shadow: none;
    }
  }
}

@mixin textarea($theme: "default") {
  @include input($theme);
  border: 1px solid $DEFAULT_DISABLED;
  &:focus {
    outline: auto $DEFAULT_DISABLED 5px;
    border-color: $DEFAULT_WASH;
    box-shadow: none;

    @if $theme == "secondary" {
      outline: auto $SECONDARY_ALT 5px;
      border-color: $SECONDARY_ALT;
      box-shadow: none;
    }
  }
}

.nh_form {
  @include title("sm");
  @include shadow("low");
  width: 100%;
  background: $DEFAULT_BG;
  position: relative;

  .nh_form_title {
    @include form-layout;
    @include title("sm");
    @include pb(2);
  }
  form {
    @include form("secondary");
    .field_note {
      @include p(0);
      @include text("xs");
      @include pt(1);
      font-style: italic;
    }
    .btn-section {
      @include py(7);
    }
  }
}

.field_with_errors {
  label {
    color: $ERROR_ALT !important;
    position: relative;
    &:after {
      content: "*";
      position: absolute;
    }
  }
  input {
    color: $ERROR_BG !important;
    border-color: $ERROR_BG !important;
  }
}

.label {
  @include label();
}

/*
=============================================================
| CARDS
=============================================================
Cards used for simple "show"-type views
*/

.card {
  @include shadow("mid");
  background: $DEFAULT_BG;
  .card-row {
    @include px(4);
    flex: 1;
    display: flex;
    flex-wrap: wrap;
    border-bottom: 1px solid $DEFAULT_DISABLED;
  }
  .card-item {
    @include text("sm");
    @include p(4);
    display: flex;
    flex: 1 1 50%;
    width: 100%;
    overflow: hidden;
    position: relative;
    .card-label {
      @include label();
      white-space: nowrap;
    }
    .text-ellipsis {
      text-overflow: ellipsis;
      white-space: nowrap;
      overflow: hidden;
      display: block;
      text-align: left;
    }
  }
  .header {
    @include px(7);
    flex-direction: column;
    .card-item {
      @include p(0);
      .btn-text-secondary,
      .card-link a {
        @include p(0);
        width: 100%;
        .label {
          color: inherit;
        }
      }
      .card-stat {
        @include px(4);
        @include py(7);
        display: flex;
        flex: 1;
        width: 100%;
        img {
          width: 2rem;
          align-self: center;
        }
        .card-details {
          @include title("lg");
          @include ml(4);
          line-height: normal;
          height: 100%;
          text-align: left;
        }
      }
    }
  }
  @media (min-width: $BREAKPOINT_SM) {
    .card-row {
      &.header {
        flex-direction: row;
      }
    }
  }
  @media (min-width: $BREAKPOINT_MD) {
    .card-item {
      flex: 1;
      .card-stat {
        justify-content: center;
      }
    }
  }
}

/*
=============================================================
| TABLES
=============================================================
*/

$TABLE_BORDER: #e4e8eb;

.nh_table_scroll {
  @include shadow("mid");
  position: relative;
  width: 100%;
  z-index: 1;
  margin: auto;
  overflow: auto;
  flex: 1;
  th,
  td {
    vertical-align: top;
    min-width: 200px;
    border-right: 1px solid $TABLE_BORDER;
    white-space: nowrap;
    &:last-child {
      border-right: 0px solid $TABLE_BORDER;
    }
  }

  .table_actions {
    min-width: unset;
  }

  table {
    width: 100%;
    margin: auto;
    border-collapse: separate;
    border-spacing: 0;
    background: $DEFAULT_BG;
    border-radius: 4px;
    border: 0;
    thead {
      th:first-child {
        z-index: 5;
        box-shadow: rgba(0, 0, 0, 0.12) 0px 2px 3px 0px;
      }
      th {
        @include p(3);
        @include title("xs");
        color: $DEFAULT_ALT;
        text-transform: capitalize;
        background: $DEFAULT_WASH;
        border-bottom: 1px solid $TABLE_BORDER;
        text-align: left;
        position: -webkit-sticky;
        position: sticky;
        top: 0;
        z-index: 3;
        overflow: hidden;
        box-shadow: rgba(0, 0, 0, 0.12) 0px 2px 3px 0px;
      }
      .table_actions {
        justify-content: center;
      }
    }
    tbody {
      th,
      td {
        @include px(3);
        @include py(2);
        border-bottom: 1px solid $TABLE_BORDER;
        &[data-type="link"] {
          @include title("xs");
          a {
            text-transform: none;
            position: absolute;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            padding: inherit;
            display: flex;
            justify-content: flex-start;
            color: $SECONDARY_ALT;
            &:hover {
              text-decoration: underline;
              color: $SECONDARY_BG;
            }
          }
        }
      }
      td {
        @include text("sm");
        flex: 1;
        color: $DEFAULT_DK;
        text-decoration: none;
      }
      .table_actions {
        padding: 0;
        display: flex;
        a {
          border-radius: 0;
          display: flex;
          flex: 0 1 25%;
          .table_action_icon {
            width: 1rem;
            height: 1rem;
            fill: $DEFAULT_BG;
          }
        }
      }
      tr {
        &:nth-child(even) {
          th,
          td {
            background: $DEFAULT_WASH;
          }
        }
        &:nth-child(odd) {
          th,
          td {
            background: $DEFAULT_BG;
          }
        }
        &:hover {
          th,
          td {
            background: $SECONDARY_WASH;
          }
          td[data-type="link"],
          th[data-type="link"] {
            text-decoration: underline;
          }
        }
      }
    }
  }
}

th:first-child {
  position: -webkit-sticky;
  position: sticky;
  left: 0;
  z-index: 2;
  width: 100%;
}

/*
=============================================================
| TOOLBAR
=============================================================
*/

$TOOLBAR_HEIGHT: 3.5;
$TOOLBAR_ZINDEX: 1000;

#nh_toolbar {
  @include shadow("mid");
  display: flex;
  align-items: center;
  position: fixed;
  width: 100%;
  height: $TOOLBAR_HEIGHT + rem;
  background: $DEFAULT_BG;
  z-index: $TOOLBAR_ZINDEX;
  .nh_toolbar_logo {
    @include logo("lettermark", "RGB", "xs");
    @include ml(4);
    @include mr(2);
  }
  .nh_toolbar_account {
    @include text("xs");
    @include px(2);
    color: $DEFAULT_ALT;
    border-left: 1px solid $SECONDARY_ALT;
  }
  .nh_toolbar_buttons {
    flex: 1;
    height: 100%;
    display: flex;
    justify-content: flex-end;
  }
}

.badge[data-badge] {
  position: relative;
  &::after {
    @include text("xxs");
    @include m(1);
    content: attr(data-badge);
    background: $PRIMARY_BG;
    width: auto;
    min-width: 1rem;
    padding: 1px;
    border-radius: 50%;
    color: $DEFAULT_BG;
    display: flex;
    align-items: center;
    justify-content: center;
    position: absolute;
    top: 0;
    right: 0;
    box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2);
  }
}

/*
=============================================================
| FOOTER
=============================================================
*/

#nh_footer {
  @include p(4);
  background: $DEFAULT_DK;
  width: 100%;
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  &[data-controller="nh_sessions"][data-action="new"] {
    position: absolute;
    bottom: 0;
    background: transparent;
  }
  .nh_footer_buttons {
    display: flex;
    flex-direction: column;
    flex-wrap: wrap;
    width: 100%;
    .nh_footer_button {
      @include text("xs");
      @include mx(2);
      @include pb(2);
      display: flex;
      align-items: center;
      flex: 0 0 30%;
      letter-spacing: 0.089em;
      color: $DEFAULT_BG;
      text-transform: uppercase;

      a {
        width: 100%;
      }
      a[data-active="true"],
      &:hover {
        opacity: 0.75;
      }
    }
  }
  .powered-by-cbrain {
    @include text("xs");
    @include px(2);
    @include py(2);
    display: flex;
    align-items: flex-end;
    justify-content: flex-end;
    color: $DEFAULT_BG;
    opacity: 0.8;
    img {
      width: 1rem;
    }
  }

  @media (min-width: $BREAKPOINT_SM) {
    @include px(7);
    &[data-controller="nh_sessions"][data-action="new"] {
      justify-content: flex-end;
    }
    .nh_footer_buttons {
      width: unset;
      flex: 1;
      .nh_footer_button {
        min-width: 150px;
      }
    }
    .powered-by-cbrain {
      @include py(0);
      flex: 1;
    }
  }
}

/*
=============================================================
| BREADCRUMBS
=============================================================
*/

.nh_breadcrumbs {
  background: #f5f5f5;
  display: flex;
  .nh_breadcrumbs_icon {
    display: flex;
    align-items: center;
    justify-content: center;
    svg {
      width: 1rem;
      height: 1rem;
      fill: $DEFAULT_ALT;
      stroke: $DEFAULT_ALT;
      opacity: 0.5;
    }
  }
  .nh_breadcrumbs_item {
    @extend .btn-nav-secondary;
    opacity: 0.5;
    color: $DEFAULT_ALT;
    transition: $TRANSITION_HOVER_OFF;
    display: flex;
    flex-direction: row-reverse;
    white-space: nowrap;

    &:hover,
    &[data-active="true"] {
      background: transparent;
      transition: $TRANSITION_HOVER_ON;
      opacity: 1;
      svg {
        width: 1rem;
        height: 1rem;
        fill: $SECONDARY_BG;
        stroke: $SECONDARY_BG;
      }
    }
  }
}

/*
=============================================================
| PAGES
=============================================================
Base styles for all pages.
*/

* {
  box-sizing: border-box;
}
html {
  height: 100%;
  display: flex;
}

html,
body {
  font-size: 16px;
  min-width: 18rem;
  flex: 1;
  display: flex;
  flex-direction: column;
}

.nh_content {
  @include p(4);
  position: relative;
  flex: 1;
  background: $DEFAULT_WASH;
  height: 100%;
  height: -moz-available;
  height: -webkit-fill-available;
  height: stretch;
  @media (min-width: $BREAKPOINT_SM) {
    @include p(7);
  }
}

.nh_page {
  height: 100%;
  display: flex;
  flex-direction: column;
  position: relative;
  &[data-isLoggedIn="true"] {
    padding-top: $TOOLBAR_HEIGHT + rem;
    background: $DEFAULT_WASH;
  }
}

$ACTION_BAR_HEIGHT: 2.5;

.nh_actions {
  @include shadow("mid");
  background: $DEFAULT_BG;
  display: flex;
  overflow: hidden;
  min-height: $ACTION_BAR_HEIGHT + rem;
  form {
    height: 100%;
  }
}

.nh_action {
  border-radius: 0px;
  display: flex;
  height: 100%;
  align-items: center;
  white-space: nowrap;
  text-transform: uppercase;
  &.btn-solid-secondary {
    @include mr(1);
  }
  &.btn-text-secondary {
    border-right: 1px solid $SECONDARY_WASH;
  }
  img {
    @include mr(2);
    width: 1rem;
  }
}

/*
=============================================================
| SESSIONS
=============================================================
*/

#nh_sessions_new {
  height: 100%;
  flex: 1;
  display: flex;
  flex-direction: column;
  .nh_login {
    @extend .nh_content;
    background: $DEFAULT_BG;
    flex: 1;
    display: flex;
    flex-direction: column;
    flex-wrap: wrap;
    height: 100%;
    .nh_logo {
      @include logo();
    }
    .nh_login_form {
      @include p(7);
      align-self: center;
      flex: 1;
      display: flex;
      justify-content: center;
      flex-direction: column;
      fieldset {
        @include field("primary");
        @include mb(4);
        &:hover,
        &:focus-within {
          background: none;
        }
        label {
          text-transform: uppercase;
        }
      }
      input[type="submit"] {
        @include mt(4);
      }
    }
  }

  .nh_features {
    @extend .nh_content;
    @include title("sm");
    background: $PRIMARY_DK;
    flex: 1;
    display: flex;
    flex-wrap: wrap;
    position: relative;
    height: 100%;

    &:before {
      content: "";
      width: 100%;
      height: 100%;
      position: absolute;
      background-image: url(<%=asset_path"/images/neurohub/NH_login_backsplash.png"%>);
      background-size: cover;
      top: 0;
      left: 0;
      opacity: 0.15;
      z-index: 0;
    }
    .nh_features_header {
      @include logo("lettermark", "white");
      background-position-x: center;
      width: 100%;
      z-index: 1;
    }
    .nh_features_list {
      color: $DEFAULT_BG;
      display: flex;
      flex-direction: column;
      flex: 1;
      align-items: center;
      align-self: center;
      z-index: 1;
      p {
        text-align: center;
      }
      .nh_feature {
        @include pb(7);
        display: flex;
        flex: 1;
        align-items: center;
        flex-direction: column;
        .nh_feature_icon {
          @include m(2);
          width: 5rem;
          height: 5rem;
        }
        .nh_feature_text {
          @include pl(4);
          max-width: 15rem;
        }
      }
      .nh_register {
        @include my(2);
        border-radius: 4px;
        color: $DEFAULT_BG;
        &:hover {
          color: $PRIMARY_BG;
        }
      }
    }
  }
  @media (min-width: $BREAKPOINT_MD) {
    flex-direction: row;
    .nh_login {
      .nh_logo {
        position: absolute;
      }
    }
    .nh_features {
      .nh_features_header {
        position: absolute;
      }
      .nh_features_list {
        .nh_feature {
          @include pb(7);
          margin: 0 auto;
          justify-content: space-around;
          flex-direction: row;
          .nh_feature_text {
            @include pl(7);
            text-align: left;
          }
        }
      }
    }
  }
}

#nh_sessions_request_password {
  flex: 1;
  .nh_logo {
    @include logo();
    @include mb(4);
  }
}

/*
=============================================================
| SIGNUPS
=============================================================
*/

#nh_signups {
  @extend .nh_content;
  flex: 1;
  .nh_logo {
    @include logo();
    @include mb(4);
  }
}

/*
=============================================================
| PROJECTS
=============================================================
*/

$MAX_CARD_LIST_HEIGHT: 15;

#nh_projects {
  flex: 1;
  display: flex;
  flex-direction: column;

  .grid {
    @include py(4);
    display: grid;
    grid-gap: 1rem;
    grid-template-columns: 1fr;
    grid-template-rows: 1fr;
    .card {
      display: flex;
      flex-wrap: wrap;
      &:hover {
        @include shadow("high");
      }
      .text-secondary,
      .btn-text-secondary {
        @include p(2);
        width: 100%;
        text-decoration: none;
        text-transform: unset;
        text-align: center;
        color: $SECONDARY_TEXT;
      }
      .card-text {
        @include p(2);
        @include text("xs");
        color: $DEFAULT_DK;
        width: 5rem;
        flex: 1;
        height: 5rem;
        white-space: unset;
      }
      .card-actions {
        @include p(0);
        @include mt(2);

        cursor: pointer;
        transition: $TRANSITION_HOVER_OFF;
        &:hover {
          background: $SECONDARY_WASH;
          transition: $TRANSITION_HOVER_ON;
        }
        a {
          @include p(2);
          @include mx(1);
          display: flex;
          flex-direction: row;
          justify-content: flex-end;
          opacity: 0.5;
          transition: $TRANSITION_HOVER_OFF;
          background: transparent;

          .table_action_icon {
            width: 1rem;
            height: 1rem;
            fill: $SECONDARY_ALT;
          }
          &:hover {
            opacity: 1;
          }
        }
      }
    }
  }
  @media (min-width: $BREAKPOINT_SM) {
    .grid {
      grid-template-columns: repeat(2, 1fr);
      grid-template-rows: repeat(2, 1fr);
    }
  }
  @media (min-width: $BREAKPOINT_MD) {
    .grid {
      grid-template-columns: repeat(3, 1fr);
      grid-template-rows: repeat(3, 1fr);
    }
  }
  @media (min-width: $BREAKPOINT_LG) {
    .grid {
      grid-template-columns: repeat(4, 1fr);
      grid-template-rows: repeat(4, 1fr);
    }
  }
}

.list {
  @include shadow("low");
  @include my(2);
  border-radius: 2px;
  max-height: $MAX_CARD_LIST_HEIGHT + rem;
  overflow: scroll;
  .list-row {
    @include text("sm");
    display: flex;
    align-items: center;
    justify-content: space-between;

    width: 100%;
    &:nth-child(odd) {
      background: $DEFAULT_WASH;
    }
    &:hover {
      background: $SECONDARY_WASH;
    }
    .list-item {
      @include text("xs");
      @include m(0);
      flex: 1;
      text-transform: none;
      border-right: 1px solid;
      border-color: $SECONDARY_WASH;
      display: flex;
      justify-content: space-between;
      > * {
        @include p(2);
      }
      &:last-child {
        border: none;
      }
      input {
        width: unset;
      }
      &[type="checkbox"] {
        width: 10rem;
        display: flex;
        justify-content: center;
        flex: unset;
      }
      .secondary {
        display: flex;
        justify-content: center;
        flex: 1;
        background: $SECONDARY_WASH;
        color: $SECONDARY_ALT;
      }
    }
    .list-header {
      @include label();
      @include m(0);
      background: $SECONDARY_BG;
      color: white;
      border-color: $DEFAULT_BG;
    }
  }
}

/*
=============================================================
| USERS
=============================================================
*/

$CARD_ITEM_MAX_WIDTH: 13;

#nh_users_show {
  @media (min-width: $BREAKPOINT_SM) {
    .card {
      .card-row[data-max-size] {
        .card-item {
          flex: 0 1 $CARD_ITEM_MAX_WIDTH + rem;
        }
      }
    }
  }
}

/*
=============================================================
| INVITATIONS
=============================================================
*/

.section {
  @include p(2);
  @include px(4);
  border-radius: 2px;
  display: flex;
  flex-direction: column;
  .section-title {
    @include pb(2);
    @include text("sm");
    color: $DEFAULT_DK;
    opacity: 0.75;
    display: flex;
    align-items: center;
    img {
      @include mr(2);
      height: 1rem;
      width: 1rem;
    }
  }
  &.default {
    background: $TABLE_BORDER;
  }
  &.primary {
    background: $PRIMARY_WASH;
    .section-title {
      color: $PRIMARY_BG;
    }
  }
  &.secondary {
    background: $SECONDARY_WASH;
    .section-title {
      color: $SECONDARY_BG;
    }
  }
}

.nh_invitations {
  .card {
    @include mb(2);
    flex-wrap: wrap;

    &:hover {
      @include shadow("high");
    }
    .header {
      @include py(2);
      border: none;
    }
    .card-item {
      @include p(1);
      align-items: center;
    }

    .btn-section {
      @include p(0);
      @include mt(0);
      flex-direction: column;
      > * {
        flex: unset;
        width: auto;
        width: 100%;
        height: 100%;
      }
      .btn {
        @include px(4);
        @include py(3);
        border-radius: 0px;
        width: 100%;
        height: 100%;
        box-shadow: none;
      }
      .btn-outline-primary {
        background: $PRIMARY_WASH;
        color: $PRIMARY_BG;
        &:hover {
          border-color: transparent;
        }
      }
      .btn-outline-secondary,
      .btn-outline-primary {
        border-color: transparent;
        opacity: 0.6;
        &:hover {
          opacity: 1;
          z-index: 100;
        }
      }
    }
    @media (min-width: $BREAKPOINT_SM) {
      display: flex;
      .btn-section {
        flex-direction: row;
        flex: 1;
        > * {
          width: auto;
          flex: 1;
          .btn {
            width: 100%;
          }
        }
      }
    }
    @media (min-width: $BREAKPOINT_MD) {
      .btn-section {
        width: auto;
        flex: unset;

        > * {
          .btn {
            @include py(1);
          }
        }
      }
    }
  }
}

/*
=============================================================
| DASHBOARD
=============================================================
*/

$DASH_CARD_MIN_WIDTH: 25;

#nh_dashboard {
  display: flex;
  flex-direction: column;
  height: 100%;
  .nh_dashboard_title {
    @include px(4);
    @include py(2);
    background: $SECONDARY_ALT;
    color: $DEFAULT_BG;
  }
  .main {
    display: flex;
    flex-direction: column;
    flex-wrap: wrap;
    flex: 1;
    > * {
      flex: 1;
      display: flex;
      flex-direction: column;
    }
    .notifications {
      .section {
        .card {
          @include mb(4);
          .header {
            @include px(5);
            @include py(2);
            min-width: 200px;
          }
          .btn-section {
            flex: 1;
          }
        }
      }
    }
    .section.user {
      @include mt(7);
      background: transparent;
      display: flex;
      flex-direction: row;
      flex-wrap: wrap;

      .card {
        @include m(0);
        @include mb(1);
        flex: 1 1 $DASH_CARD_MIN_WIDTH + rem;
        display: flex;
        flex-direction: column;
        .card-title {
          @include p(4);
          background: $DEFAULT_WASH;
          text-decoration: none;
        }
        .card-row {
          padding: 0;
          &:nth-child(even) {
            background: $DEFAULT_WASH;
          }
          .card-section {
            flex: 1;
          }
          .card-item {
            @include px(4);
            @include py(2);
            justify-content: flex-start;

            &.title {
              background: $DEFAULT_WASH;
            }
            span {
              vertical-align: sub;
            }
            &.btn-text-secondary {
              text-align: left;
              text-decoration: none;
              cursor: default;
              a {
                text-decoration: underline;
                cursor: pointer;
              }
              svg {
                width: 1.5rem;
                height: 1.5rem;
                fill: $SECONDARY_TEXT;
                stroke: $SECONDARY_TEXT;
                vertical-align: sub;
              }
              &:hover {
                svg {
                  fill: $SECONDARY_BG;
                  stroke: $SECONDARY_BG;

                  transition: $TRANSITION_HOVER_ON;
                }
              }
            }
          }
        }
        a {
          justify-content: flex-start;
          text-decoration: none;
        }
      }
    }
  }
  @media (min-width: $BREAKPOINT_MD) {
    .main {
      flex-direction: row;

      .section.user {
        @include mt(0);
        .card {
          .card-row {
            flex-direction: row;
            flex-wrap: nowrap;
            .card-section {
              flex: unset;
              width: 50%;
              display: flex;
              flex-direction: row;
            }
            .card-item {
              text-align: left;
            }
          }
        }
      }
    }
  }
}
